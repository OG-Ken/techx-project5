{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\n\nexport function getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return _objectSpread(_objectSpread({}, baseAlign), align);\n}\nexport function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  var placements = Object.keys(builtinPlacements);\n\n  for (var i = 0; i < placements.length; i += 1) {\n    var placement = placements[i];\n\n    if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n      return \"\".concat(prefixCls, \"-placement-\").concat(placement);\n    }\n  }\n\n  return '';\n}","map":{"version":3,"names":["_objectSpread","isPointsEq","a1","a2","isAlignPoint","getAlignFromPlacement","builtinPlacements","placementStr","align","baseAlign","getAlignPopupClassName","prefixCls","points","placements","Object","keys","i","length","placement","concat"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-trigger/es/utils/alignUtil.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\n\nexport function getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return _objectSpread(_objectSpread({}, baseAlign), align);\n}\nexport function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  var placements = Object.keys(builtinPlacements);\n\n  for (var i = 0; i < placements.length; i += 1) {\n    var placement = placements[i];\n\n    if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n      return \"\".concat(prefixCls, \"-placement-\").concat(placement);\n    }\n  }\n\n  return '';\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;;AAEA,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,YAA5B,EAA0C;EACxC,IAAIA,YAAJ,EAAkB;IAChB,OAAOF,EAAE,CAAC,CAAD,CAAF,KAAUC,EAAE,CAAC,CAAD,CAAnB;EACD;;EAED,OAAOD,EAAE,CAAC,CAAD,CAAF,KAAUC,EAAE,CAAC,CAAD,CAAZ,IAAmBD,EAAE,CAAC,CAAD,CAAF,KAAUC,EAAE,CAAC,CAAD,CAAtC;AACD;;AAED,OAAO,SAASE,qBAAT,CAA+BC,iBAA/B,EAAkDC,YAAlD,EAAgEC,KAAhE,EAAuE;EAC5E,IAAIC,SAAS,GAAGH,iBAAiB,CAACC,YAAD,CAAjB,IAAmC,EAAnD;EACA,OAAOP,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKS,SAAL,CAAd,EAA+BD,KAA/B,CAApB;AACD;AACD,OAAO,SAASE,sBAAT,CAAgCJ,iBAAhC,EAAmDK,SAAnD,EAA8DH,KAA9D,EAAqEJ,YAArE,EAAmF;EACxF,IAAIQ,MAAM,GAAGJ,KAAK,CAACI,MAAnB;EACA,IAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYT,iBAAZ,CAAjB;;EAEA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;IAC7C,IAAIE,SAAS,GAAGL,UAAU,CAACG,CAAD,CAA1B;;IAEA,IAAIf,UAAU,CAACK,iBAAiB,CAACY,SAAD,CAAjB,CAA6BN,MAA9B,EAAsCA,MAAtC,EAA8CR,YAA9C,CAAd,EAA2E;MACzE,OAAO,GAAGe,MAAH,CAAUR,SAAV,EAAqB,aAArB,EAAoCQ,MAApC,CAA2CD,SAA3C,CAAP;IACD;EACF;;EAED,OAAO,EAAP;AACD"},"metadata":{},"sourceType":"module"}