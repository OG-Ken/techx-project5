{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from '../../hooks/useCellClassName';\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\nimport RangeContext from '../../RangeContext';\nimport PanelBody from '../PanelBody';\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\n\nfunction YearBody(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      viewDate = props.viewDate,\n      locale = props.locale,\n      generateConfig = props.generateConfig;\n\n  var _React$useContext = React.useContext(RangeContext),\n      rangedValue = _React$useContext.rangedValue,\n      hoverRangedValue = _React$useContext.hoverRangedValue;\n\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\"); // =============================== Year ===============================\n\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue,\n    hoverRangedValue: hoverRangedValue,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  return /*#__PURE__*/React.createElement(PanelBody, _extends({}, props, {\n    rowNum: YEAR_ROW_COUNT,\n    colNum: YEAR_COL_COUNT,\n    baseDate: baseYear,\n    getCellText: generateConfig.getYear,\n    getCellClassName: getCellClassName,\n    getCellDate: generateConfig.addYear,\n    titleCell: function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }));\n}\n\nexport default YearBody;","map":{"version":3,"names":["_extends","React","YEAR_DECADE_COUNT","useCellClassName","formatValue","isSameYear","RangeContext","PanelBody","YEAR_COL_COUNT","YEAR_ROW_COUNT","YearBody","props","prefixCls","value","viewDate","locale","generateConfig","_React$useContext","useContext","rangedValue","hoverRangedValue","yearPrefixCls","concat","yearNumber","getYear","startYear","Math","floor","endYear","baseYear","setYear","ceil","isInView","date","currentYearNumber","getCellClassName","cellPrefixCls","isSameCell","current","target","offsetCell","offset","addYear","createElement","rowNum","colNum","baseDate","getCellText","getCellDate","titleCell","format"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-picker/es/panels/YearPanel/YearBody.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from '../../hooks/useCellClassName';\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\nimport RangeContext from '../../RangeContext';\nimport PanelBody from '../PanelBody';\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\n\nfunction YearBody(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      viewDate = props.viewDate,\n      locale = props.locale,\n      generateConfig = props.generateConfig;\n\n  var _React$useContext = React.useContext(RangeContext),\n      rangedValue = _React$useContext.rangedValue,\n      hoverRangedValue = _React$useContext.hoverRangedValue;\n\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\"); // =============================== Year ===============================\n\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue,\n    hoverRangedValue: hoverRangedValue,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  return /*#__PURE__*/React.createElement(PanelBody, _extends({}, props, {\n    rowNum: YEAR_ROW_COUNT,\n    colNum: YEAR_COL_COUNT,\n    baseDate: baseYear,\n    getCellText: generateConfig.getYear,\n    getCellClassName: getCellClassName,\n    getCellDate: generateConfig.addYear,\n    titleCell: function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }));\n}\n\nexport default YearBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}