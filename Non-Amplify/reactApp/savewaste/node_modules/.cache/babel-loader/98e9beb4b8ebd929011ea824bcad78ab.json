{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { toArray } from './typeUtil';\nimport cloneDeep from '../utils/cloneDeep';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nexport function isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n\n  if (!source && target || source && !target) {\n    return false;\n  }\n\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\n    return false;\n  }\n\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return _toConsumableArray(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n\n    return sourceValue === targetValue;\n  });\n}\nexport function defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n\n  return event;\n}\n/**\n * Moves an array item from one position in an array to another.\n *\n * Note: This is a pure function so a new array will be returned, instead\n * of altering the array argument.\n *\n * @param array         Array in which to move an item.         (required)\n * @param moveIndex     The index of the item to move.          (required)\n * @param toIndex       The index to move item at moveIndex to. (required)\n */\n\nexport function move(array, moveIndex, toIndex) {\n  var length = array.length;\n\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n\n  if (diff > 0) {\n    // move left\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\n  }\n\n  if (diff < 0) {\n    // move right\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\n  }\n\n  return array;\n}","map":{"version":3,"names":["_objectSpread","_toConsumableArray","_typeof","get","set","toArray","cloneDeep","getNamePath","path","getValue","store","namePath","value","setValue","removeIfUndefined","arguments","length","undefined","newStore","cloneByNamePathList","namePathList","forEach","containsNamePath","some","matchNamePath","isObject","obj","Object","getPrototypeOf","prototype","internalSetValues","values","Array","isArray","keys","key","prevValue","recursive","setValues","_len","restValues","_key","reduce","current","changedNamePath","every","nameUnit","i","isSimilar","source","target","sourceKeys","targetKeys","Set","concat","sourceValue","targetValue","defaultGetValueFromEvent","valuePropName","event","move","array","moveIndex","toIndex","item","diff","slice"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-field-form/es/utils/valueUtil.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { toArray } from './typeUtil';\nimport cloneDeep from '../utils/cloneDeep';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nexport function isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n\n  if (!source && target || source && !target) {\n    return false;\n  }\n\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\n    return false;\n  }\n\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return _toConsumableArray(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n\n    return sourceValue === targetValue;\n  });\n}\nexport function defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n\n  return event;\n}\n/**\n * Moves an array item from one position in an array to another.\n *\n * Note: This is a pure function so a new array will be returned, instead\n * of altering the array argument.\n *\n * @param array         Array in which to move an item.         (required)\n * @param moveIndex     The index of the item to move.          (required)\n * @param toIndex       The index to move item at moveIndex to. (required)\n */\n\nexport function move(array, moveIndex, toIndex) {\n  var length = array.length;\n\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n\n  if (diff > 0) {\n    // move left\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\n  }\n\n  if (diff < 0) {\n    // move right\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\n  }\n\n  return array;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}