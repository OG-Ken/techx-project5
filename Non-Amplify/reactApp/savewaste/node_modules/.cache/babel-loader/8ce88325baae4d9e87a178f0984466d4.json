{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toPathOptions } from '../utils/treeUtil';\nimport * as React from 'react';\nimport { toPathKey } from '../utils/commonUtil';\nexport default (function (rawValues, options, fieldNames, multiple, displayRender) {\n  return React.useMemo(function () {\n    var mergedDisplayRender = displayRender || // Default displayRender\n    function (labels) {\n      var mergedLabels = multiple ? labels.slice(-1) : labels;\n      var SPLIT = ' / ';\n\n      if (mergedLabels.every(function (label) {\n        return ['string', 'number'].includes(_typeof(label));\n      })) {\n        return mergedLabels.join(SPLIT);\n      } // If exist non-string value, use ReactNode instead\n\n\n      return mergedLabels.reduce(function (list, label, index) {\n        var keyedLabel = /*#__PURE__*/React.isValidElement(label) ? /*#__PURE__*/React.cloneElement(label, {\n          key: index\n        }) : label;\n\n        if (index === 0) {\n          return [keyedLabel];\n        }\n\n        return [].concat(_toConsumableArray(list), [SPLIT, keyedLabel]);\n      }, []);\n    };\n\n    return rawValues.map(function (valueCells) {\n      var _valueOptions, _valueOptions$option;\n\n      var valueOptions = toPathOptions(valueCells, options, fieldNames);\n      var label = mergedDisplayRender(valueOptions.map(function (_ref) {\n        var _option$fieldNames$la;\n\n        var option = _ref.option,\n            value = _ref.value;\n        return (_option$fieldNames$la = option === null || option === void 0 ? void 0 : option[fieldNames.label]) !== null && _option$fieldNames$la !== void 0 ? _option$fieldNames$la : value;\n      }), valueOptions.map(function (_ref2) {\n        var option = _ref2.option;\n        return option;\n      }));\n      var value = toPathKey(valueCells);\n      return {\n        label: label,\n        value: value,\n        key: value,\n        valueCells: valueCells,\n        disabled: (_valueOptions = valueOptions[valueOptions.length - 1]) === null || _valueOptions === void 0 ? void 0 : (_valueOptions$option = _valueOptions.option) === null || _valueOptions$option === void 0 ? void 0 : _valueOptions$option.disabled\n      };\n    });\n  }, [rawValues, options, fieldNames, displayRender, multiple]);\n});","map":{"version":3,"names":["_toConsumableArray","_typeof","toPathOptions","React","toPathKey","rawValues","options","fieldNames","multiple","displayRender","useMemo","mergedDisplayRender","labels","mergedLabels","slice","SPLIT","every","label","includes","join","reduce","list","index","keyedLabel","isValidElement","cloneElement","key","concat","map","valueCells","_valueOptions","_valueOptions$option","valueOptions","_ref","_option$fieldNames$la","option","value","_ref2","disabled","length"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-cascader/es/hooks/useDisplayValues.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toPathOptions } from '../utils/treeUtil';\nimport * as React from 'react';\nimport { toPathKey } from '../utils/commonUtil';\nexport default (function (rawValues, options, fieldNames, multiple, displayRender) {\n  return React.useMemo(function () {\n    var mergedDisplayRender = displayRender || // Default displayRender\n    function (labels) {\n      var mergedLabels = multiple ? labels.slice(-1) : labels;\n      var SPLIT = ' / ';\n\n      if (mergedLabels.every(function (label) {\n        return ['string', 'number'].includes(_typeof(label));\n      })) {\n        return mergedLabels.join(SPLIT);\n      } // If exist non-string value, use ReactNode instead\n\n\n      return mergedLabels.reduce(function (list, label, index) {\n        var keyedLabel = /*#__PURE__*/React.isValidElement(label) ? /*#__PURE__*/React.cloneElement(label, {\n          key: index\n        }) : label;\n\n        if (index === 0) {\n          return [keyedLabel];\n        }\n\n        return [].concat(_toConsumableArray(list), [SPLIT, keyedLabel]);\n      }, []);\n    };\n\n    return rawValues.map(function (valueCells) {\n      var _valueOptions, _valueOptions$option;\n\n      var valueOptions = toPathOptions(valueCells, options, fieldNames);\n      var label = mergedDisplayRender(valueOptions.map(function (_ref) {\n        var _option$fieldNames$la;\n\n        var option = _ref.option,\n            value = _ref.value;\n        return (_option$fieldNames$la = option === null || option === void 0 ? void 0 : option[fieldNames.label]) !== null && _option$fieldNames$la !== void 0 ? _option$fieldNames$la : value;\n      }), valueOptions.map(function (_ref2) {\n        var option = _ref2.option;\n        return option;\n      }));\n      var value = toPathKey(valueCells);\n      return {\n        label: label,\n        value: value,\n        key: value,\n        valueCells: valueCells,\n        disabled: (_valueOptions = valueOptions[valueOptions.length - 1]) === null || _valueOptions === void 0 ? void 0 : (_valueOptions$option = _valueOptions.option) === null || _valueOptions$option === void 0 ? void 0 : _valueOptions$option.disabled\n      };\n    });\n  }, [rawValues, options, fieldNames, displayRender, multiple]);\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}