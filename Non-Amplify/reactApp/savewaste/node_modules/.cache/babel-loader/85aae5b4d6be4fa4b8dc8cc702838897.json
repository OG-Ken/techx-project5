{"ast":null,"code":"import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport { isStyleSupport };\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","map":{"version":3,"names":["canUseDom","isStyleSupport","canUseDocElement","window","document","documentElement","flexGapSupported","detectFlexGapSupported","undefined","flex","createElement","style","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/antd/es/_util/styleChecker.js"],"sourcesContent":["import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport { isStyleSupport };\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;EACxD,OAAOF,SAAS,MAAMG,MAAM,CAACC,QAAP,CAAgBC,eAAtC;AACD,CAFM;AAGP,SAASJ,cAAT;AACA,IAAIK,gBAAJ;AACA,OAAO,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,GAAkC;EACpE,IAAI,CAACL,gBAAgB,EAArB,EAAyB;IACvB,OAAO,KAAP;EACD;;EAED,IAAII,gBAAgB,KAAKE,SAAzB,EAAoC;IAClC,OAAOF,gBAAP;EACD,CAPmE,CAOlE;;;EAGF,IAAIG,IAAI,GAAGL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAX;EACAD,IAAI,CAACE,KAAL,CAAWC,OAAX,GAAqB,MAArB;EACAH,IAAI,CAACE,KAAL,CAAWE,aAAX,GAA2B,QAA3B;EACAJ,IAAI,CAACE,KAAL,CAAWG,MAAX,GAAoB,KAApB,CAboE,CAazC;;EAE3BL,IAAI,CAACM,WAAL,CAAiBX,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAjB;EACAD,IAAI,CAACM,WAAL,CAAiBX,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAjB,EAhBoE,CAgBnB;;EAEjDN,QAAQ,CAACY,IAAT,CAAcD,WAAd,CAA0BN,IAA1B;EACAH,gBAAgB,GAAGG,IAAI,CAACQ,YAAL,KAAsB,CAAzC,CAnBoE,CAmBxB;;EAE5Cb,QAAQ,CAACY,IAAT,CAAcE,WAAd,CAA0BT,IAA1B;EACA,OAAOH,gBAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}