{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\n\nfunction cuttable(node) {\n  var type = _typeof(node);\n\n  return type === 'string' || type === 'number';\n}\n\nfunction getNodesLen(nodeList) {\n  var totalLen = 0;\n  nodeList.forEach(function (node) {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\n\nfunction sliceNodes(nodeList, len) {\n  var currLen = 0;\n  var currentNodeList = [];\n\n  for (var i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n\n    var node = nodeList[i];\n    var canCut = cuttable(node);\n    var nodeLen = canCut ? String(node).length : 1;\n    var nextLen = currLen + nodeLen; // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n\n    if (nextLen > len) {\n      var restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n\n  return nodeList;\n}\n\nvar NONE = 0;\nvar PREPARE = 1;\nvar WALKING = 2;\nvar DONE_WITH_ELLIPSIS = 3;\nvar DONE_WITHOUT_ELLIPSIS = 4;\n\nvar Ellipsis = function Ellipsis(_ref) {\n  var enabledMeasure = _ref.enabledMeasure,\n      children = _ref.children,\n      text = _ref.text,\n      width = _ref.width,\n      rows = _ref.rows,\n      onEllipsis = _ref.onEllipsis;\n\n  var _React$useState = React.useState([0, 0, 0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cutLength = _React$useState2[0],\n      setCutLength = _React$useState2[1];\n\n  var _React$useState3 = React.useState(NONE),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      walkingState = _React$useState4[0],\n      setWalkingState = _React$useState4[1];\n\n  var _cutLength = _slicedToArray(cutLength, 3),\n      startLen = _cutLength[0],\n      midLen = _cutLength[1],\n      endLen = _cutLength[2];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      singleRowHeight = _React$useState6[0],\n      setSingleRowHeight = _React$useState6[1];\n\n  var singleRowRef = React.useRef(null);\n  var midRowRef = React.useRef(null);\n  var nodeList = React.useMemo(function () {\n    return toArray(text);\n  }, [text]);\n  var totalLen = React.useMemo(function () {\n    return getNodesLen(nodeList);\n  }, [nodeList]);\n  var mergedChildren = React.useMemo(function () {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]); // ======================== Walk ========================\n\n  useIsomorphicLayoutEffect(function () {\n    if (enabledMeasure && width && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(function () {\n    var _a, _b;\n\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        var midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        var maxHeight = rows * singleRowHeight;\n\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          var _midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n\n          var _maxHeight = rows * singleRowHeight;\n\n          var nextStartLen = startLen;\n          var nextEndLen = endLen; // We reach the last round\n\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (_midHeight <= _maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n\n          var nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]); // ======================= Render =======================\n\n  var measureStyle = {\n    width: width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n\n  var renderMeasure = function renderMeasure(content, ref, style) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      ref: ref,\n      style: _extends({\n        position: 'fixed',\n        display: 'block',\n        left: 0,\n        top: 0,\n        zIndex: -9999,\n        visibility: 'hidden',\n        pointerEvents: 'none'\n      }, style)\n    }, content);\n  };\n\n  var renderMeasureSlice = function renderMeasureSlice(len, ref) {\n    var sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\n\nexport default Ellipsis;","map":{"version":3,"names":["_extends","_slicedToArray","_typeof","toArray","useIsomorphicLayoutEffect","React","cuttable","node","type","getNodesLen","nodeList","totalLen","forEach","String","length","sliceNodes","len","currLen","currentNodeList","i","canCut","nodeLen","nextLen","restLen","push","slice","NONE","PREPARE","WALKING","DONE_WITH_ELLIPSIS","DONE_WITHOUT_ELLIPSIS","Ellipsis","_ref","enabledMeasure","children","text","width","rows","onEllipsis","_React$useState","useState","_React$useState2","cutLength","setCutLength","_React$useState3","_React$useState4","walkingState","setWalkingState","_cutLength","startLen","midLen","endLen","_React$useState5","_React$useState6","singleRowHeight","setSingleRowHeight","singleRowRef","useRef","midRowRef","useMemo","mergedChildren","Math","ceil","_a","current","offsetHeight","_b","midHeight","maxHeight","_midHeight","_maxHeight","nextStartLen","nextEndLen","nextMidLen","measureStyle","whiteSpace","margin","padding","renderMeasure","content","ref","style","createElement","position","display","left","top","zIndex","visibility","pointerEvents","renderMeasureSlice","sliceNodeList","Fragment","wordBreak","process","env","NODE_ENV","displayName"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/antd/es/typography/Base/Ellipsis.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\n\nfunction cuttable(node) {\n  var type = _typeof(node);\n\n  return type === 'string' || type === 'number';\n}\n\nfunction getNodesLen(nodeList) {\n  var totalLen = 0;\n  nodeList.forEach(function (node) {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\n\nfunction sliceNodes(nodeList, len) {\n  var currLen = 0;\n  var currentNodeList = [];\n\n  for (var i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n\n    var node = nodeList[i];\n    var canCut = cuttable(node);\n    var nodeLen = canCut ? String(node).length : 1;\n    var nextLen = currLen + nodeLen; // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n\n    if (nextLen > len) {\n      var restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n\n  return nodeList;\n}\n\nvar NONE = 0;\nvar PREPARE = 1;\nvar WALKING = 2;\nvar DONE_WITH_ELLIPSIS = 3;\nvar DONE_WITHOUT_ELLIPSIS = 4;\n\nvar Ellipsis = function Ellipsis(_ref) {\n  var enabledMeasure = _ref.enabledMeasure,\n      children = _ref.children,\n      text = _ref.text,\n      width = _ref.width,\n      rows = _ref.rows,\n      onEllipsis = _ref.onEllipsis;\n\n  var _React$useState = React.useState([0, 0, 0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cutLength = _React$useState2[0],\n      setCutLength = _React$useState2[1];\n\n  var _React$useState3 = React.useState(NONE),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      walkingState = _React$useState4[0],\n      setWalkingState = _React$useState4[1];\n\n  var _cutLength = _slicedToArray(cutLength, 3),\n      startLen = _cutLength[0],\n      midLen = _cutLength[1],\n      endLen = _cutLength[2];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      singleRowHeight = _React$useState6[0],\n      setSingleRowHeight = _React$useState6[1];\n\n  var singleRowRef = React.useRef(null);\n  var midRowRef = React.useRef(null);\n  var nodeList = React.useMemo(function () {\n    return toArray(text);\n  }, [text]);\n  var totalLen = React.useMemo(function () {\n    return getNodesLen(nodeList);\n  }, [nodeList]);\n  var mergedChildren = React.useMemo(function () {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]); // ======================== Walk ========================\n\n  useIsomorphicLayoutEffect(function () {\n    if (enabledMeasure && width && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(function () {\n    var _a, _b;\n\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        var midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        var maxHeight = rows * singleRowHeight;\n\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          var _midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n\n          var _maxHeight = rows * singleRowHeight;\n\n          var nextStartLen = startLen;\n          var nextEndLen = endLen; // We reach the last round\n\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (_midHeight <= _maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n\n          var nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]); // ======================= Render =======================\n\n  var measureStyle = {\n    width: width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n\n  var renderMeasure = function renderMeasure(content, ref, style) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      ref: ref,\n      style: _extends({\n        position: 'fixed',\n        display: 'block',\n        left: 0,\n        top: 0,\n        zIndex: -9999,\n        visibility: 'hidden',\n        pointerEvents: 'none'\n      }, style)\n    }, content);\n  };\n\n  var renderMeasureSlice = function renderMeasureSlice(len, ref) {\n    var sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\n\nexport default Ellipsis;"],"mappings":"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"},"metadata":{},"sourceType":"module"}