{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport HoverContext from '../context/HoverContext';\nimport PerfContext from '../context/PerfContext';\nimport MeasureRow from './MeasureRow';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      flattenColumns = _React$useContext3.flattenColumns;\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey); // =================== Performance ====================\n\n  var perfRef = React.useRef({\n    renderWithProps: false\n  }); // ====================== Hover =======================\n\n  var _React$useState = React.useState(-1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startRow = _React$useState2[0],\n      setStartRow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endRow = _React$useState4[0],\n      setEndRow = _React$useState4[1];\n\n  var onHover = React.useCallback(function (start, end) {\n    setStartRow(start);\n    setEndRow(end);\n  }, []); // ====================== Render ======================\n\n  var bodyNode = React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = flattenData.map(function (item, idx) {\n        var record = item.record,\n            indent = item.indent,\n            renderIndex = item.index;\n        var key = getRowKey(record, idx);\n        return /*#__PURE__*/React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: idx,\n          renderIndex: renderIndex,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName,\n          indent: indent\n        });\n      });\n    } else {\n      rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        component: trComponent,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length,\n        isEmpty: true\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return /*#__PURE__*/React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && /*#__PURE__*/React.createElement(MeasureRow, {\n      prefixCls: prefixCls,\n      columnsKey: columnsKey,\n      onColumnResize: onColumnResize\n    }), rows);\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, emptyNode, flattenColumns, childrenColumnName, onColumnResize, rowExpandable, flattenData]);\n  return /*#__PURE__*/React.createElement(PerfContext.Provider, {\n    value: perfRef.current\n  }, /*#__PURE__*/React.createElement(HoverContext.Provider, {\n    value: {\n      startRow: startRow,\n      endRow: endRow,\n      onHover: onHover\n    }\n  }, bodyNode));\n}\n\nvar MemoBody = /*#__PURE__*/React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;","map":{"version":3,"names":["_slicedToArray","React","TableContext","ExpandedRow","BodyContext","getColumnsKey","ResizeContext","BodyRow","useFlattenRecords","HoverContext","PerfContext","MeasureRow","Body","_ref","data","getRowKey","measureColumnWidth","expandedKeys","onRow","rowExpandable","emptyNode","childrenColumnName","_React$useContext","useContext","onColumnResize","_React$useContext2","prefixCls","getComponent","_React$useContext3","flattenColumns","flattenData","perfRef","useRef","renderWithProps","_React$useState","useState","_React$useState2","startRow","setStartRow","_React$useState3","_React$useState4","endRow","setEndRow","onHover","useCallback","start","end","bodyNode","useMemo","WrapperComponent","trComponent","tdComponent","rows","length","map","item","idx","record","indent","renderIndex","index","key","createElement","rowKey","recordKey","rowComponent","cellComponent","expanded","className","concat","component","colSpan","isEmpty","columnsKey","Provider","value","current","MemoBody","memo","displayName"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/Body/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport HoverContext from '../context/HoverContext';\nimport PerfContext from '../context/PerfContext';\nimport MeasureRow from './MeasureRow';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      flattenColumns = _React$useContext3.flattenColumns;\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey); // =================== Performance ====================\n\n  var perfRef = React.useRef({\n    renderWithProps: false\n  }); // ====================== Hover =======================\n\n  var _React$useState = React.useState(-1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startRow = _React$useState2[0],\n      setStartRow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endRow = _React$useState4[0],\n      setEndRow = _React$useState4[1];\n\n  var onHover = React.useCallback(function (start, end) {\n    setStartRow(start);\n    setEndRow(end);\n  }, []); // ====================== Render ======================\n\n  var bodyNode = React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = flattenData.map(function (item, idx) {\n        var record = item.record,\n            indent = item.indent,\n            renderIndex = item.index;\n        var key = getRowKey(record, idx);\n        return /*#__PURE__*/React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: idx,\n          renderIndex: renderIndex,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName,\n          indent: indent\n        });\n      });\n    } else {\n      rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        component: trComponent,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length,\n        isEmpty: true\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return /*#__PURE__*/React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && /*#__PURE__*/React.createElement(MeasureRow, {\n      prefixCls: prefixCls,\n      columnsKey: columnsKey,\n      onColumnResize: onColumnResize\n    }), rows);\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, emptyNode, flattenColumns, childrenColumnName, onColumnResize, rowExpandable, flattenData]);\n  return /*#__PURE__*/React.createElement(PerfContext.Provider, {\n    value: perfRef.current\n  }, /*#__PURE__*/React.createElement(HoverContext.Provider, {\n    value: {\n      startRow: startRow,\n      endRow: endRow,\n      onHover: onHover\n    }\n  }, bodyNode));\n}\n\nvar MemoBody = /*#__PURE__*/React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}