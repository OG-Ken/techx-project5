{"ast":null,"code":"var INTERNAL_KEY_PREFIX = 'RC_TABLE_KEY';\n\nfunction toArray(arr) {\n  if (arr === undefined || arr === null) {\n    return [];\n  }\n\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nexport function getPathValue(record, path) {\n  // Skip if path is empty\n  if (!path && typeof path !== 'number') {\n    return record;\n  }\n\n  var pathList = toArray(path);\n  var current = record;\n\n  for (var i = 0; i < pathList.length; i += 1) {\n    if (!current) {\n      return null;\n    }\n\n    var prop = pathList[i];\n    current = current[prop];\n  }\n\n  return current;\n}\nexport function getColumnsKey(columns) {\n  var columnKeys = [];\n  var keys = {};\n  columns.forEach(function (column) {\n    var _ref = column || {},\n        key = _ref.key,\n        dataIndex = _ref.dataIndex;\n\n    var mergedKey = key || toArray(dataIndex).join('-') || INTERNAL_KEY_PREFIX;\n\n    while (keys[mergedKey]) {\n      mergedKey = \"\".concat(mergedKey, \"_next\");\n    }\n\n    keys[mergedKey] = true;\n    columnKeys.push(mergedKey);\n  });\n  return columnKeys;\n}\nexport function validateValue(val) {\n  return val !== null && val !== undefined;\n}","map":{"version":3,"names":["INTERNAL_KEY_PREFIX","toArray","arr","undefined","Array","isArray","getPathValue","record","path","pathList","current","i","length","prop","getColumnsKey","columns","columnKeys","keys","forEach","column","_ref","key","dataIndex","mergedKey","join","concat","push","validateValue","val"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/utils/valueUtil.js"],"sourcesContent":["var INTERNAL_KEY_PREFIX = 'RC_TABLE_KEY';\n\nfunction toArray(arr) {\n  if (arr === undefined || arr === null) {\n    return [];\n  }\n\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nexport function getPathValue(record, path) {\n  // Skip if path is empty\n  if (!path && typeof path !== 'number') {\n    return record;\n  }\n\n  var pathList = toArray(path);\n  var current = record;\n\n  for (var i = 0; i < pathList.length; i += 1) {\n    if (!current) {\n      return null;\n    }\n\n    var prop = pathList[i];\n    current = current[prop];\n  }\n\n  return current;\n}\nexport function getColumnsKey(columns) {\n  var columnKeys = [];\n  var keys = {};\n  columns.forEach(function (column) {\n    var _ref = column || {},\n        key = _ref.key,\n        dataIndex = _ref.dataIndex;\n\n    var mergedKey = key || toArray(dataIndex).join('-') || INTERNAL_KEY_PREFIX;\n\n    while (keys[mergedKey]) {\n      mergedKey = \"\".concat(mergedKey, \"_next\");\n    }\n\n    keys[mergedKey] = true;\n    columnKeys.push(mergedKey);\n  });\n  return columnKeys;\n}\nexport function validateValue(val) {\n  return val !== null && val !== undefined;\n}"],"mappings":"AAAA,IAAIA,mBAAmB,GAAG,cAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACpB,IAAIA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAAjC,EAAuC;IACrC,OAAO,EAAP;EACD;;EAED,OAAOE,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACD;;AAED,OAAO,SAASI,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;EACzC;EACA,IAAI,CAACA,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;IACrC,OAAOD,MAAP;EACD;;EAED,IAAIE,QAAQ,GAAGR,OAAO,CAACO,IAAD,CAAtB;EACA,IAAIE,OAAO,GAAGH,MAAd;;EAEA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;IAC3C,IAAI,CAACD,OAAL,EAAc;MACZ,OAAO,IAAP;IACD;;IAED,IAAIG,IAAI,GAAGJ,QAAQ,CAACE,CAAD,CAAnB;IACAD,OAAO,GAAGA,OAAO,CAACG,IAAD,CAAjB;EACD;;EAED,OAAOH,OAAP;AACD;AACD,OAAO,SAASI,aAAT,CAAuBC,OAAvB,EAAgC;EACrC,IAAIC,UAAU,GAAG,EAAjB;EACA,IAAIC,IAAI,GAAG,EAAX;EACAF,OAAO,CAACG,OAAR,CAAgB,UAAUC,MAAV,EAAkB;IAChC,IAAIC,IAAI,GAAGD,MAAM,IAAI,EAArB;IAAA,IACIE,GAAG,GAAGD,IAAI,CAACC,GADf;IAAA,IAEIC,SAAS,GAAGF,IAAI,CAACE,SAFrB;;IAIA,IAAIC,SAAS,GAAGF,GAAG,IAAIpB,OAAO,CAACqB,SAAD,CAAP,CAAmBE,IAAnB,CAAwB,GAAxB,CAAP,IAAuCxB,mBAAvD;;IAEA,OAAOiB,IAAI,CAACM,SAAD,CAAX,EAAwB;MACtBA,SAAS,GAAG,GAAGE,MAAH,CAAUF,SAAV,EAAqB,OAArB,CAAZ;IACD;;IAEDN,IAAI,CAACM,SAAD,CAAJ,GAAkB,IAAlB;IACAP,UAAU,CAACU,IAAX,CAAgBH,SAAhB;EACD,CAbD;EAcA,OAAOP,UAAP;AACD;AACD,OAAO,SAASW,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,OAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzB,SAA/B;AACD"},"metadata":{},"sourceType":"module"}