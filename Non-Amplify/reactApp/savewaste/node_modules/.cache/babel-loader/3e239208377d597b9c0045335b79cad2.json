{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      var kvMap = new Map();\n      /* eslint-disable no-inner-declarations */\n\n      function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n\n          if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      }\n      /* eslint-enable */\n\n\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n\n    return mapCacheRef.current.kvMap.get(key);\n  }\n\n  return [getRecordByKey];\n}","map":{"version":3,"names":["_typeof","React","useLazyKVMap","data","childrenColumnName","getRowKey","mapCacheRef","useRef","getRecordByKey","key","current","kvMap","Map","dig","records","forEach","record","index","rowKey","set","get"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/antd/es/table/hooks/useLazyKVMap.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      var kvMap = new Map();\n      /* eslint-disable no-inner-declarations */\n\n      function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n\n          if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      }\n      /* eslint-enable */\n\n\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n\n    return mapCacheRef.current.kvMap.get(key);\n  }\n\n  return [getRecordByKey];\n}"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,kBAA5B,EAAgDC,SAAhD,EAA2D;EACxE,IAAIC,WAAW,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAb,CAAlB;;EAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;IAC3B,IAAI,CAACH,WAAW,CAACI,OAAb,IAAwBJ,WAAW,CAACI,OAAZ,CAAoBP,IAApB,KAA6BA,IAArD,IAA6DG,WAAW,CAACI,OAAZ,CAAoBN,kBAApB,KAA2CA,kBAAxG,IAA8HE,WAAW,CAACI,OAAZ,CAAoBL,SAApB,KAAkCA,SAApK,EAA+K;MAC7K,IAAIM,KAAK,GAAG,IAAIC,GAAJ,EAAZ;MACA;;MAEA,SAASC,GAAT,CAAaC,OAAb,EAAsB;QACpBA,OAAO,CAACC,OAAR,CAAgB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;UACvC,IAAIC,MAAM,GAAGb,SAAS,CAACW,MAAD,EAASC,KAAT,CAAtB;UACAN,KAAK,CAACQ,GAAN,CAAUD,MAAV,EAAkBF,MAAlB;;UAEA,IAAIA,MAAM,IAAIhB,OAAO,CAACgB,MAAD,CAAP,KAAoB,QAA9B,IAA0CZ,kBAAkB,IAAIY,MAApE,EAA4E;YAC1EH,GAAG,CAACG,MAAM,CAACZ,kBAAD,CAAN,IAA8B,EAA/B,CAAH;UACD;QACF,CAPD;MAQD;MACD;;;MAGAS,GAAG,CAACV,IAAD,CAAH;MACAG,WAAW,CAACI,OAAZ,GAAsB;QACpBP,IAAI,EAAEA,IADc;QAEpBC,kBAAkB,EAAEA,kBAFA;QAGpBO,KAAK,EAAEA,KAHa;QAIpBN,SAAS,EAAEA;MAJS,CAAtB;IAMD;;IAED,OAAOC,WAAW,CAACI,OAAZ,CAAoBC,KAApB,CAA0BS,GAA1B,CAA8BX,GAA9B,CAAP;EACD;;EAED,OAAO,CAACD,cAAD,CAAP;AACD"},"metadata":{},"sourceType":"module"}