{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\n/**\n * Handle virtual list of the TreeNodes.\n */\n\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, _excluded); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  var indentMeasurerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      },\n      getIndentWidth: function getIndentWidth() {\n        return indentMeasurerRef.current.offsetWidth;\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(expandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevExpandedKeys = _React$useState2[0],\n      setPrevExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(data),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevData = _React$useState4[0],\n      setPrevData = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      transitionData = _React$useState6[0],\n      setTransitionData = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionRange = _React$useState8[0],\n      setTransitionRange = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      motionType = _React$useState10[0],\n      setMotionType = _React$useState10[1]; // When motion end but data change, this will makes data back to previous one\n\n\n  var dataRef = React.useRef(data);\n  dataRef.current = data;\n\n  function onMotionEnd() {\n    var latestData = dataRef.current;\n    setPrevData(latestData);\n    setTransitionData(latestData);\n    setTransitionRange([]);\n    setMotionType(null);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.key;\n          return key === diffExpanded.key;\n        });\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.key;\n          return key === diffExpanded.key;\n        });\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop,\n    \"aria-label\": \"for screen reader\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-treenode\"),\n    \"aria-hidden\": true,\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: indentMeasurerRef,\n    className: \"\".concat(prefixCls, \"-indent-unit\")\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef,\n    onVisibleChange: function onVisibleChange(originList, fullList) {\n      var originSet = new Set(originList);\n      var restList = fullList.filter(function (item) {\n        return !originSet.has(item);\n      }); // Motion node is not render. Skip motion\n\n      if (restList.some(function (item) {\n        return itemKey(item) === MOTION_KEY;\n      })) {\n        onMotionEnd();\n      }\n    }\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        restProps = _extends({}, treeNode.data),\n        title = treeNode.title,\n        key = treeNode.key,\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.key;\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\n      title: title,\n      active: !!activeItem && key === activeItem.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionStart: onListChangeStart,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n});\nNodeList.displayName = 'NodeList';\nexport default NodeList;","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","VirtualList","MotionTreeNode","findExpandedKeys","getExpandRange","getTreeNodeProps","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","concat","Math","random","MotionNode","key","MotionEntity","level","index","pos","node","nodes","MotionFlattenData","parent","children","data","title","isStart","isEnd","getMinimumRangeTransitionRange","list","virtual","itemHeight","slice","ceil","itemKey","item","getAccessibilityPath","path","String","current","NodeList","forwardRef","props","ref","prefixCls","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd","domProps","listRef","useRef","indentMeasurerRef","useImperativeHandle","scrollTo","scroll","getIndentWidth","offsetWidth","_React$useState","useState","_React$useState2","prevExpandedKeys","setPrevExpandedKeys","_React$useState3","_React$useState4","prevData","setPrevData","_React$useState5","_React$useState6","transitionData","setTransitionData","_React$useState7","_React$useState8","transitionRange","setTransitionRange","_React$useState9","_React$useState10","motionType","setMotionType","dataRef","onMotionEnd","latestData","useEffect","diffExpanded","add","keyIndex","findIndex","_ref","rangeNodes","newTransitionData","splice","_keyIndex","_ref2","_rangeNodes","_newTransitionData","mergedData","treeNodeRequiredProps","createElement","Fragment","style","value","onChange","className","position","pointerEvents","visibility","fullHeight","onVisibleChange","originList","fullList","originSet","Set","restList","filter","has","some","treeNode","restProps","mergedKey","treeNodeProps","active","motionNodes","onMotionStart","onMouseMove","displayName"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-tree/es/NodeList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\n\n/**\n * Handle virtual list of the TreeNodes.\n */\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, _excluded); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  var indentMeasurerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      },\n      getIndentWidth: function getIndentWidth() {\n        return indentMeasurerRef.current.offsetWidth;\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(expandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevExpandedKeys = _React$useState2[0],\n      setPrevExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(data),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevData = _React$useState4[0],\n      setPrevData = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      transitionData = _React$useState6[0],\n      setTransitionData = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionRange = _React$useState8[0],\n      setTransitionRange = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      motionType = _React$useState10[0],\n      setMotionType = _React$useState10[1]; // When motion end but data change, this will makes data back to previous one\n\n\n  var dataRef = React.useRef(data);\n  dataRef.current = data;\n\n  function onMotionEnd() {\n    var latestData = dataRef.current;\n    setPrevData(latestData);\n    setTransitionData(latestData);\n    setTransitionRange([]);\n    setMotionType(null);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.key;\n          return key === diffExpanded.key;\n        });\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.key;\n          return key === diffExpanded.key;\n        });\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop,\n    \"aria-label\": \"for screen reader\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-treenode\"),\n    \"aria-hidden\": true,\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: indentMeasurerRef,\n    className: \"\".concat(prefixCls, \"-indent-unit\")\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef,\n    onVisibleChange: function onVisibleChange(originList, fullList) {\n      var originSet = new Set(originList);\n      var restList = fullList.filter(function (item) {\n        return !originSet.has(item);\n      }); // Motion node is not render. Skip motion\n\n      if (restList.some(function (item) {\n        return itemKey(item) === MOTION_KEY;\n      })) {\n        onMotionEnd();\n      }\n    }\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        restProps = _extends({}, treeNode.data),\n        title = treeNode.title,\n        key = treeNode.key,\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.key;\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\n      title: title,\n      active: !!activeItem && key === activeItem.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionStart: onListChangeStart,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n});\nNodeList.displayName = 'NodeList';\nexport default NodeList;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,WAAD,EAAc,MAAd,EAAsB,YAAtB,EAAoC,WAApC,EAAiD,cAAjD,EAAiE,cAAjE,EAAiF,aAAjF,EAAgG,YAAhG,EAA8G,aAA9G,EAA6H,iBAA7H,EAAgJ,aAAhJ,EAA+J,UAA/J,EAA2K,UAA3K,EAAuL,iBAAvL,EAA0M,cAA1M,EAA0N,QAA1N,EAAoO,QAApO,EAA8O,YAA9O,EAA4P,SAA5P,EAAuQ,WAAvQ,EAAoR,YAApR,EAAkS,SAAlS,EAA6S,UAA7S,EAAyT,WAAzT,EAAsU,SAAtU,EAAiV,QAAjV,EAA2V,gBAA3V,EAA6W,mBAA7W,EAAkY,iBAAlY,CAAhB;AAEA;AACA;AACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;AACA,SAASC,gBAAT,EAA2BC,MAA3B,QAAyC,kBAAzC;AACA,IAAIC,YAAY,GAAG;EACjBC,KAAK,EAAE,CADU;EAEjBC,MAAM,EAAE,CAFS;EAGjBC,OAAO,EAAE,MAHQ;EAIjBC,QAAQ,EAAE,QAJO;EAKjBC,OAAO,EAAE,CALQ;EAMjBC,MAAM,EAAE,CANS;EAOjBC,OAAO,EAAE,CAPQ;EAQjBC,MAAM,EAAE;AARS,CAAnB;;AAWA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,OAAO,IAAIC,UAAU,GAAG,kBAAkBC,MAAlB,CAAyBC,IAAI,CAACC,MAAL,EAAzB,CAAjB;AACP,IAAIC,UAAU,GAAG;EACfC,GAAG,EAAEL;AADU,CAAjB;AAGA,OAAO,IAAIM,YAAY,GAAG;EACxBD,GAAG,EAAEL,UADmB;EAExBO,KAAK,EAAE,CAFiB;EAGxBC,KAAK,EAAE,CAHiB;EAIxBC,GAAG,EAAE,GAJmB;EAKxBC,IAAI,EAAEN,UALkB;EAMxBO,KAAK,EAAE,CAACP,UAAD;AANiB,CAAnB;AAQP,IAAIQ,iBAAiB,GAAG;EACtBC,MAAM,EAAE,IADc;EAEtBC,QAAQ,EAAE,EAFY;EAGtBL,GAAG,EAAEH,YAAY,CAACG,GAHI;EAItBM,IAAI,EAAEX,UAJgB;EAKtBY,KAAK,EAAE,IALe;EAMtBX,GAAG,EAAEL,UANiB;;EAQtB;EACAiB,OAAO,EAAE,EATa;EAUtBC,KAAK,EAAE;AAVe,CAAxB;AAYA;AACA;AACA;;AAEA,OAAO,SAASC,8BAAT,CAAwCC,IAAxC,EAA8CC,OAA9C,EAAuD7B,MAAvD,EAA+D8B,UAA/D,EAA2E;EAChF,IAAID,OAAO,KAAK,KAAZ,IAAqB,CAAC7B,MAA1B,EAAkC;IAChC,OAAO4B,IAAP;EACD;;EAED,OAAOA,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcrB,IAAI,CAACsB,IAAL,CAAUhC,MAAM,GAAG8B,UAAnB,IAAiC,CAA/C,CAAP;AACD;;AAED,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;EACrB,IAAIrB,GAAG,GAAGqB,IAAI,CAACrB,GAAf;EAAA,IACII,GAAG,GAAGiB,IAAI,CAACjB,GADf;EAEA,OAAOpB,MAAM,CAACgB,GAAD,EAAMI,GAAN,CAAb;AACD;;AAED,SAASkB,oBAAT,CAA8BD,IAA9B,EAAoC;EAClC,IAAIE,IAAI,GAAGC,MAAM,CAACH,IAAI,CAACX,IAAL,CAAUV,GAAX,CAAjB;EACA,IAAIyB,OAAO,GAAGJ,IAAd;;EAEA,OAAOI,OAAO,CAACjB,MAAf,EAAuB;IACrBiB,OAAO,GAAGA,OAAO,CAACjB,MAAlB;IACAe,IAAI,GAAG,GAAG3B,MAAH,CAAU6B,OAAO,CAACf,IAAR,CAAaV,GAAvB,EAA4B,KAA5B,EAAmCJ,MAAnC,CAA0C2B,IAA1C,CAAP;EACD;;EAED,OAAOA,IAAP;AACD;;AAED,IAAIG,QAAQ,GAAG,aAAahD,KAAK,CAACiD,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;EACjE,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;EAAA,IACIpB,IAAI,GAAGkB,KAAK,CAAClB,IADjB;EAAA,IAEIqB,UAAU,GAAGH,KAAK,CAACG,UAFvB;EAAA,IAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;EAAA,IAIIC,YAAY,GAAGL,KAAK,CAACK,YAJzB;EAAA,IAKIC,YAAY,GAAGN,KAAK,CAACM,YALzB;EAAA,IAMIC,WAAW,GAAGP,KAAK,CAACO,WANxB;EAAA,IAOIC,UAAU,GAAGR,KAAK,CAACQ,UAPvB;EAAA,IAQIC,WAAW,GAAGT,KAAK,CAACS,WARxB;EAAA,IASIC,eAAe,GAAGV,KAAK,CAACU,eAT5B;EAAA,IAUIC,WAAW,GAAGX,KAAK,CAACW,WAVxB;EAAA,IAWIC,QAAQ,GAAGZ,KAAK,CAACY,QAXrB;EAAA,IAYIC,QAAQ,GAAGb,KAAK,CAACa,QAZrB;EAAA,IAaIC,eAAe,GAAGd,KAAK,CAACc,eAb5B;EAAA,IAcIC,YAAY,GAAGf,KAAK,CAACe,YAdzB;EAAA,IAeIC,MAAM,GAAGhB,KAAK,CAACgB,MAfnB;EAAA,IAgBIzD,MAAM,GAAGyC,KAAK,CAACzC,MAhBnB;EAAA,IAiBI8B,UAAU,GAAGW,KAAK,CAACX,UAjBvB;EAAA,IAkBID,OAAO,GAAGY,KAAK,CAACZ,OAlBpB;EAAA,IAmBI6B,SAAS,GAAGjB,KAAK,CAACiB,SAnBtB;EAAA,IAoBIC,UAAU,GAAGlB,KAAK,CAACkB,UApBvB;EAAA,IAqBIC,OAAO,GAAGnB,KAAK,CAACmB,OArBpB;EAAA,IAsBIC,QAAQ,GAAGpB,KAAK,CAACoB,QAtBrB;EAAA,IAuBIC,SAAS,GAAGrB,KAAK,CAACqB,SAvBtB;EAAA,IAwBIC,OAAO,GAAGtB,KAAK,CAACsB,OAxBpB;EAAA,IAyBIC,MAAM,GAAGvB,KAAK,CAACuB,MAzBnB;EAAA,IA0BIC,cAAc,GAAGxB,KAAK,CAACwB,cA1B3B;EAAA,IA2BIC,iBAAiB,GAAGzB,KAAK,CAACyB,iBA3B9B;EAAA,IA4BIC,eAAe,GAAG1B,KAAK,CAAC0B,eA5B5B;EAAA,IA6BIC,QAAQ,GAAG/E,wBAAwB,CAACoD,KAAD,EAAQnD,SAAR,CA7BvC,CADiE,CA8BN;;;EAG3D,IAAI+E,OAAO,GAAG9E,KAAK,CAAC+E,MAAN,CAAa,IAAb,CAAd;EACA,IAAIC,iBAAiB,GAAGhF,KAAK,CAAC+E,MAAN,CAAa,IAAb,CAAxB;EACA/E,KAAK,CAACiF,mBAAN,CAA0B9B,GAA1B,EAA+B,YAAY;IACzC,OAAO;MACL+B,QAAQ,EAAE,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;QAClCL,OAAO,CAAC/B,OAAR,CAAgBmC,QAAhB,CAAyBC,MAAzB;MACD,CAHI;MAILC,cAAc,EAAE,SAASA,cAAT,GAA0B;QACxC,OAAOJ,iBAAiB,CAACjC,OAAlB,CAA0BsC,WAAjC;MACD;IANI,CAAP;EAQD,CATD,EAnCiE,CA4C7D;;EAEJ,IAAIC,eAAe,GAAGtF,KAAK,CAACuF,QAAN,CAAehC,YAAf,CAAtB;EAAA,IACIiC,gBAAgB,GAAG3F,cAAc,CAACyF,eAAD,EAAkB,CAAlB,CADrC;EAAA,IAEIG,gBAAgB,GAAGD,gBAAgB,CAAC,CAAD,CAFvC;EAAA,IAGIE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAD,CAH1C;;EAKA,IAAIG,gBAAgB,GAAG3F,KAAK,CAACuF,QAAN,CAAevD,IAAf,CAAvB;EAAA,IACI4D,gBAAgB,GAAG/F,cAAc,CAAC8F,gBAAD,EAAmB,CAAnB,CADrC;EAAA,IAEIE,QAAQ,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;EAAA,IAGIE,WAAW,GAAGF,gBAAgB,CAAC,CAAD,CAHlC;;EAKA,IAAIG,gBAAgB,GAAG/F,KAAK,CAACuF,QAAN,CAAevD,IAAf,CAAvB;EAAA,IACIgE,gBAAgB,GAAGnG,cAAc,CAACkG,gBAAD,EAAmB,CAAnB,CADrC;EAAA,IAEIE,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CAFrC;EAAA,IAGIE,iBAAiB,GAAGF,gBAAgB,CAAC,CAAD,CAHxC;;EAKA,IAAIG,gBAAgB,GAAGnG,KAAK,CAACuF,QAAN,CAAe,EAAf,CAAvB;EAAA,IACIa,gBAAgB,GAAGvG,cAAc,CAACsG,gBAAD,EAAmB,CAAnB,CADrC;EAAA,IAEIE,eAAe,GAAGD,gBAAgB,CAAC,CAAD,CAFtC;EAAA,IAGIE,kBAAkB,GAAGF,gBAAgB,CAAC,CAAD,CAHzC;;EAKA,IAAIG,gBAAgB,GAAGvG,KAAK,CAACuF,QAAN,CAAe,IAAf,CAAvB;EAAA,IACIiB,iBAAiB,GAAG3G,cAAc,CAAC0G,gBAAD,EAAmB,CAAnB,CADtC;EAAA,IAEIE,UAAU,GAAGD,iBAAiB,CAAC,CAAD,CAFlC;EAAA,IAGIE,aAAa,GAAGF,iBAAiB,CAAC,CAAD,CAHrC,CAlEiE,CAqEvB;;;EAG1C,IAAIG,OAAO,GAAG3G,KAAK,CAAC+E,MAAN,CAAa/C,IAAb,CAAd;EACA2E,OAAO,CAAC5D,OAAR,GAAkBf,IAAlB;;EAEA,SAAS4E,WAAT,GAAuB;IACrB,IAAIC,UAAU,GAAGF,OAAO,CAAC5D,OAAzB;IACA+C,WAAW,CAACe,UAAD,CAAX;IACAX,iBAAiB,CAACW,UAAD,CAAjB;IACAP,kBAAkB,CAAC,EAAD,CAAlB;IACAI,aAAa,CAAC,IAAD,CAAb;IACA9B,eAAe;EAChB,CAlFgE,CAkF/D;;;EAGF5E,KAAK,CAAC8G,SAAN,CAAgB,YAAY;IAC1BpB,mBAAmB,CAACnC,YAAD,CAAnB;IACA,IAAIwD,YAAY,GAAG5G,gBAAgB,CAACsF,gBAAD,EAAmBlC,YAAnB,CAAnC;;IAEA,IAAIwD,YAAY,CAACzF,GAAb,KAAqB,IAAzB,EAA+B;MAC7B,IAAIyF,YAAY,CAACC,GAAjB,EAAsB;QACpB,IAAIC,QAAQ,GAAGpB,QAAQ,CAACqB,SAAT,CAAmB,UAAUC,IAAV,EAAgB;UAChD,IAAI7F,GAAG,GAAG6F,IAAI,CAAC7F,GAAf;UACA,OAAOA,GAAG,KAAKyF,YAAY,CAACzF,GAA5B;QACD,CAHc,CAAf;QAIA,IAAI8F,UAAU,GAAGhF,8BAA8B,CAAChC,cAAc,CAACyF,QAAD,EAAW7D,IAAX,EAAiB+E,YAAY,CAACzF,GAA9B,CAAf,EAAmDgB,OAAnD,EAA4D7B,MAA5D,EAAoE8B,UAApE,CAA/C;QACA,IAAI8E,iBAAiB,GAAGxB,QAAQ,CAACrD,KAAT,EAAxB;QACA6E,iBAAiB,CAACC,MAAlB,CAAyBL,QAAQ,GAAG,CAApC,EAAuC,CAAvC,EAA0CpF,iBAA1C;QACAqE,iBAAiB,CAACmB,iBAAD,CAAjB;QACAf,kBAAkB,CAACc,UAAD,CAAlB;QACAV,aAAa,CAAC,MAAD,CAAb;MACD,CAXD,MAWO;QACL,IAAIa,SAAS,GAAGvF,IAAI,CAACkF,SAAL,CAAe,UAAUM,KAAV,EAAiB;UAC9C,IAAIlG,GAAG,GAAGkG,KAAK,CAAClG,GAAhB;UACA,OAAOA,GAAG,KAAKyF,YAAY,CAACzF,GAA5B;QACD,CAHe,CAAhB;;QAKA,IAAImG,WAAW,GAAGrF,8BAA8B,CAAChC,cAAc,CAAC4B,IAAD,EAAO6D,QAAP,EAAiBkB,YAAY,CAACzF,GAA9B,CAAf,EAAmDgB,OAAnD,EAA4D7B,MAA5D,EAAoE8B,UAApE,CAAhD;;QAEA,IAAImF,kBAAkB,GAAG1F,IAAI,CAACQ,KAAL,EAAzB;;QAEAkF,kBAAkB,CAACJ,MAAnB,CAA0BC,SAAS,GAAG,CAAtC,EAAyC,CAAzC,EAA4C1F,iBAA5C;;QAEAqE,iBAAiB,CAACwB,kBAAD,CAAjB;QACApB,kBAAkB,CAACmB,WAAD,CAAlB;QACAf,aAAa,CAAC,MAAD,CAAb;MACD;IACF,CA5BD,MA4BO,IAAIb,QAAQ,KAAK7D,IAAjB,EAAuB;MAC5B;MACA8D,WAAW,CAAC9D,IAAD,CAAX;MACAkE,iBAAiB,CAAClE,IAAD,CAAjB;IACD;EACF,CArCD,EAqCG,CAACuB,YAAD,EAAevB,IAAf,CArCH,EArFiE,CA0HvC;;EAE1BhC,KAAK,CAAC8G,SAAN,CAAgB,YAAY;IAC1B,IAAI,CAAC/C,QAAL,EAAe;MACb6C,WAAW;IACZ;EACF,CAJD,EAIG,CAAC7C,QAAD,CAJH;EAKA,IAAI4D,UAAU,GAAGzD,MAAM,GAAG+B,cAAH,GAAoBjE,IAA3C;EACA,IAAI4F,qBAAqB,GAAG;IAC1BrE,YAAY,EAAEA,YADY;IAE1BC,YAAY,EAAEA,YAFY;IAG1BE,UAAU,EAAEA,UAHc;IAI1BC,WAAW,EAAEA,WAJa;IAK1BF,WAAW,EAAEA,WALa;IAM1BG,eAAe,EAAEA,eANS;IAO1BI,eAAe,EAAEA,eAPS;IAQ1BC,YAAY,EAAEA,YARY;IAS1BJ,WAAW,EAAEA;EATa,CAA5B;EAWA,OAAO,aAAa7D,KAAK,CAAC6H,aAAN,CAAoB7H,KAAK,CAAC8H,QAA1B,EAAoC,IAApC,EAA0CzD,OAAO,IAAID,UAAX,IAAyB,aAAapE,KAAK,CAAC6H,aAAN,CAAoB,MAApB,EAA4B;IAC9HE,KAAK,EAAExH,YADuH;IAE9H,aAAa;EAFiH,CAA5B,EAGjGqC,oBAAoB,CAACwB,UAAD,CAH6E,CAAhF,EAGkB,aAAapE,KAAK,CAAC6H,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,aAAa7H,KAAK,CAAC6H,aAAN,CAAoB,OAApB,EAA6B;IAC5HE,KAAK,EAAExH,YADqH;IAE5HuD,QAAQ,EAAEK,SAAS,KAAK,KAAd,IAAuBL,QAF2F;IAG5HQ,QAAQ,EAAEH,SAAS,KAAK,KAAd,GAAsBG,QAAtB,GAAiC,IAHiF;IAI5HC,SAAS,EAAEA,SAJiH;IAK5HC,OAAO,EAAEA,OALmH;IAM5HC,MAAM,EAAEA,MANoH;IAO5HuD,KAAK,EAAE,EAPqH;IAQ5HC,QAAQ,EAAEjH,IARkH;IAS5H,cAAc;EAT8G,CAA7B,CAA9C,CAH/B,EAaf,aAAahB,KAAK,CAAC6H,aAAN,CAAoB,KAApB,EAA2B;IAC3CK,SAAS,EAAE,GAAGhH,MAAH,CAAUkC,SAAV,EAAqB,WAArB,CADgC;IAE3C,eAAe,IAF4B;IAG3C2E,KAAK,EAAE;MACLI,QAAQ,EAAE,UADL;MAELC,aAAa,EAAE,MAFV;MAGLC,UAAU,EAAE,QAHP;MAIL5H,MAAM,EAAE,CAJH;MAKLE,QAAQ,EAAE;IALL;EAHoC,CAA3B,EAUf,aAAaX,KAAK,CAAC6H,aAAN,CAAoB,KAApB,EAA2B;IACzCK,SAAS,EAAE,GAAGhH,MAAH,CAAUkC,SAAV,EAAqB,SAArB;EAD8B,CAA3B,EAEb,aAAapD,KAAK,CAAC6H,aAAN,CAAoB,KAApB,EAA2B;IACzC1E,GAAG,EAAE6B,iBADoC;IAEzCkD,SAAS,EAAE,GAAGhH,MAAH,CAAUkC,SAAV,EAAqB,cAArB;EAF8B,CAA3B,CAFA,CAVE,CAbE,EA4Bd,aAAapD,KAAK,CAAC6H,aAAN,CAAoB5H,WAApB,EAAiCL,QAAQ,CAAC,EAAD,EAAKiF,QAAL,EAAe;IACzE7C,IAAI,EAAE2F,UADmE;IAEzEjF,OAAO,EAAEA,OAFgE;IAGzEjC,MAAM,EAAEA,MAHiE;IAIzE6H,UAAU,EAAE,KAJ6D;IAKzEhG,OAAO,EAAEA,OALgE;IAMzEC,UAAU,EAAEA,UAN6D;IAOzEa,SAAS,EAAE,GAAGlC,MAAH,CAAUkC,SAAV,EAAqB,OAArB,CAP8D;IAQzED,GAAG,EAAE2B,OARoE;IASzEyD,eAAe,EAAE,SAASA,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;MAC9D,IAAIC,SAAS,GAAG,IAAIC,GAAJ,CAAQH,UAAR,CAAhB;MACA,IAAII,QAAQ,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAAUlG,IAAV,EAAgB;QAC7C,OAAO,CAAC+F,SAAS,CAACI,GAAV,CAAcnG,IAAd,CAAR;MACD,CAFc,CAAf,CAF8D,CAI1D;;MAEJ,IAAIiG,QAAQ,CAACG,IAAT,CAAc,UAAUpG,IAAV,EAAgB;QAChC,OAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB1B,UAAzB;MACD,CAFG,CAAJ,EAEI;QACF2F,WAAW;MACZ;IACF;EApBwE,CAAf,CAAzC,EAqBf,UAAUoC,QAAV,EAAoB;IACtB,IAAItH,GAAG,GAAGsH,QAAQ,CAACtH,GAAnB;IAAA,IACIuH,SAAS,GAAGrJ,QAAQ,CAAC,EAAD,EAAKoJ,QAAQ,CAAChH,IAAd,CADxB;IAAA,IAEIC,KAAK,GAAG+G,QAAQ,CAAC/G,KAFrB;IAAA,IAGIX,GAAG,GAAG0H,QAAQ,CAAC1H,GAHnB;IAAA,IAIIY,OAAO,GAAG8G,QAAQ,CAAC9G,OAJvB;IAAA,IAKIC,KAAK,GAAG6G,QAAQ,CAAC7G,KALrB;;IAOA,IAAI+G,SAAS,GAAG5I,MAAM,CAACgB,GAAD,EAAMI,GAAN,CAAtB;IACA,OAAOuH,SAAS,CAAC3H,GAAjB;IACA,OAAO2H,SAAS,CAAClH,QAAjB;IACA,IAAIoH,aAAa,GAAG9I,gBAAgB,CAAC6I,SAAD,EAAYtB,qBAAZ,CAApC;IACA,OAAO,aAAa5H,KAAK,CAAC6H,aAAN,CAAoB3H,cAApB,EAAoCN,QAAQ,CAAC,EAAD,EAAKqJ,SAAL,EAAgBE,aAAhB,EAA+B;MAC7FlH,KAAK,EAAEA,KADsF;MAE7FmH,MAAM,EAAE,CAAC,CAAChF,UAAF,IAAgB9C,GAAG,KAAK8C,UAAU,CAAC9C,GAFkD;MAG7FI,GAAG,EAAEA,GAHwF;MAI7FM,IAAI,EAAEgH,QAAQ,CAAChH,IAJ8E;MAK7FE,OAAO,EAAEA,OALoF;MAM7FC,KAAK,EAAEA,KANsF;MAO7F+B,MAAM,EAAEA,MAPqF;MAQ7FmF,WAAW,EAAE/H,GAAG,KAAKL,UAAR,GAAqBoF,eAArB,GAAuC,IARyC;MAS7FI,UAAU,EAAEA,UATiF;MAU7F6C,aAAa,EAAE3E,iBAV8E;MAW7FiC,WAAW,EAAEA,WAXgF;MAY7FgB,qBAAqB,EAAEA,qBAZsE;MAa7F2B,WAAW,EAAE,SAASA,WAAT,GAAuB;QAClC7E,cAAc,CAAC,IAAD,CAAd;MACD;IAf4F,CAA/B,CAA5C,CAApB;EAiBD,CAlDkB,CA5BC,CAApB;AA+ED,CA5N2B,CAA5B;AA6NA1B,QAAQ,CAACwG,WAAT,GAAuB,UAAvB;AACA,eAAexG,QAAf"},"metadata":{},"sourceType":"module"}