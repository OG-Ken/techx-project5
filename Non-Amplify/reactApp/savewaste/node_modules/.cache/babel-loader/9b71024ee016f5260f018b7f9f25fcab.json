{"ast":null,"code":"import { useMemo } from 'react';\nvar DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0,\n  right: 0\n};\nexport default function useVisibleRange(tabOffsets, containerSize, tabContentNodeSize, addNodeSize, _ref) {\n  var tabs = _ref.tabs,\n      tabPosition = _ref.tabPosition,\n      rtl = _ref.rtl;\n  var unit;\n  var position;\n  var transformSize;\n\n  if (['top', 'bottom'].includes(tabPosition)) {\n    unit = 'width';\n    position = rtl ? 'right' : 'left';\n    transformSize = Math.abs(containerSize.left);\n  } else {\n    unit = 'height';\n    position = 'top';\n    transformSize = -containerSize.top;\n  }\n\n  var basicSize = containerSize[unit];\n  var tabContentSize = tabContentNodeSize[unit];\n  var addSize = addNodeSize[unit];\n  var mergedBasicSize = basicSize;\n\n  if (tabContentSize + addSize > basicSize && tabContentSize < basicSize) {\n    mergedBasicSize = basicSize - addSize;\n  }\n\n  return useMemo(function () {\n    if (!tabs.length) {\n      return [0, 0];\n    }\n\n    var len = tabs.length;\n    var endIndex = len;\n\n    for (var i = 0; i < len; i += 1) {\n      var offset = tabOffsets.get(tabs[i].key) || DEFAULT_SIZE;\n\n      if (offset[position] + offset[unit] > transformSize + mergedBasicSize) {\n        endIndex = i - 1;\n        break;\n      }\n    }\n\n    var startIndex = 0;\n\n    for (var _i = len - 1; _i >= 0; _i -= 1) {\n      var _offset = tabOffsets.get(tabs[_i].key) || DEFAULT_SIZE;\n\n      if (_offset[position] < transformSize) {\n        startIndex = _i + 1;\n        break;\n      }\n    }\n\n    return [startIndex, endIndex];\n  }, [tabOffsets, transformSize, mergedBasicSize, tabPosition, tabs.map(function (tab) {\n    return tab.key;\n  }).join('_'), rtl]);\n}","map":{"version":3,"names":["useMemo","DEFAULT_SIZE","width","height","left","top","right","useVisibleRange","tabOffsets","containerSize","tabContentNodeSize","addNodeSize","_ref","tabs","tabPosition","rtl","unit","position","transformSize","includes","Math","abs","basicSize","tabContentSize","addSize","mergedBasicSize","length","len","endIndex","i","offset","get","key","startIndex","_i","_offset","map","tab","join"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-tabs/es/hooks/useVisibleRange.js"],"sourcesContent":["import { useMemo } from 'react';\nvar DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0,\n  right: 0\n};\nexport default function useVisibleRange(tabOffsets, containerSize, tabContentNodeSize, addNodeSize, _ref) {\n  var tabs = _ref.tabs,\n      tabPosition = _ref.tabPosition,\n      rtl = _ref.rtl;\n  var unit;\n  var position;\n  var transformSize;\n\n  if (['top', 'bottom'].includes(tabPosition)) {\n    unit = 'width';\n    position = rtl ? 'right' : 'left';\n    transformSize = Math.abs(containerSize.left);\n  } else {\n    unit = 'height';\n    position = 'top';\n    transformSize = -containerSize.top;\n  }\n\n  var basicSize = containerSize[unit];\n  var tabContentSize = tabContentNodeSize[unit];\n  var addSize = addNodeSize[unit];\n  var mergedBasicSize = basicSize;\n\n  if (tabContentSize + addSize > basicSize && tabContentSize < basicSize) {\n    mergedBasicSize = basicSize - addSize;\n  }\n\n  return useMemo(function () {\n    if (!tabs.length) {\n      return [0, 0];\n    }\n\n    var len = tabs.length;\n    var endIndex = len;\n\n    for (var i = 0; i < len; i += 1) {\n      var offset = tabOffsets.get(tabs[i].key) || DEFAULT_SIZE;\n\n      if (offset[position] + offset[unit] > transformSize + mergedBasicSize) {\n        endIndex = i - 1;\n        break;\n      }\n    }\n\n    var startIndex = 0;\n\n    for (var _i = len - 1; _i >= 0; _i -= 1) {\n      var _offset = tabOffsets.get(tabs[_i].key) || DEFAULT_SIZE;\n\n      if (_offset[position] < transformSize) {\n        startIndex = _i + 1;\n        break;\n      }\n    }\n\n    return [startIndex, endIndex];\n  }, [tabOffsets, transformSize, mergedBasicSize, tabPosition, tabs.map(function (tab) {\n    return tab.key;\n  }).join('_'), rtl]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}