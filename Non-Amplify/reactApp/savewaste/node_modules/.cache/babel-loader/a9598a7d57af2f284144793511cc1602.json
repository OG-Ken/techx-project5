{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\n\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport Select from '../select';\nimport { isValidElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'AutoComplete', '`dataSource` is only supports type `string[] | Object[]`.') : void 0;\n          return undefined;\n      }\n    }) : [];\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!dropdownClassName, 'AutoComplete', '`dropdownClassName` is deprecated which will be removed in next major version. Please use `popupClassName` instead.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      dropdownClassName: popupClassName || dropdownClassName,\n      className: classNames(\"\".concat(prefixCls, \"-auto-complete\"), className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE\n    }, {\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;","map":{"version":3,"names":["_extends","_typeof","_slicedToArray","classNames","toArray","omit","React","ConfigConsumer","Select","isValidElement","warning","Option","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","customizePrefixCls","prefixCls","className","popupClassName","dropdownClassName","children","dataSource","childNodes","customizeInput","length","_childNodes","getInputElement","undefined","optionChildren","map","item","createElement","key","value","optionValue","text","process","env","NODE_ENV","_ref","getPrefixCls","concat","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","forwardRef"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/antd/es/auto-complete/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport Select from '../select';\nimport { isValidElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'AutoComplete', '`dataSource` is only supports type `string[] | Object[]`.') : void 0;\n          return undefined;\n      }\n    }) : [];\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!dropdownClassName, 'AutoComplete', '`dropdownClassName` is deprecated which will be removed in next major version. Please use `popupClassName` instead.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      dropdownClassName: popupClassName || dropdownClassName,\n      className: classNames(\"\".concat(prefixCls, \"-auto-complete\"), className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE\n    }, {\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;"],"mappings":"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"},"metadata":{},"sourceType":"module"}