{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"expandable\"];\nimport warning from \"rc-util/es/warning\";\nexport var INTERNAL_COL_DEFINE = 'RC_TABLE_INTERNAL_COL_DEFINE';\nexport function getExpandableProps(props) {\n  var expandable = props.expandable,\n      legacyExpandableConfig = _objectWithoutProperties(props, _excluded);\n\n  var config;\n\n  if ('expandable' in props) {\n    config = _objectSpread(_objectSpread({}, legacyExpandableConfig), expandable);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && ['indentSize', 'expandedRowKeys', 'defaultExpandedRowKeys', 'defaultExpandAllRows', 'expandedRowRender', 'expandRowByClick', 'expandIcon', 'onExpand', 'onExpandedRowsChange', 'expandedRowClassName', 'expandIconColumnIndex', 'showExpandColumn'].some(function (prop) {\n      return prop in props;\n    })) {\n      warning(false, 'expanded related props have been moved into `expandable`.');\n    }\n\n    config = legacyExpandableConfig;\n  }\n\n  if (config.showExpandColumn === false) {\n    config.expandIconColumnIndex = -1;\n  }\n\n  return config;\n}","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","warning","INTERNAL_COL_DEFINE","getExpandableProps","props","expandable","legacyExpandableConfig","config","process","env","NODE_ENV","some","prop","showExpandColumn","expandIconColumnIndex"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/utils/legacyUtil.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"expandable\"];\nimport warning from \"rc-util/es/warning\";\nexport var INTERNAL_COL_DEFINE = 'RC_TABLE_INTERNAL_COL_DEFINE';\nexport function getExpandableProps(props) {\n  var expandable = props.expandable,\n      legacyExpandableConfig = _objectWithoutProperties(props, _excluded);\n\n  var config;\n\n  if ('expandable' in props) {\n    config = _objectSpread(_objectSpread({}, legacyExpandableConfig), expandable);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && ['indentSize', 'expandedRowKeys', 'defaultExpandedRowKeys', 'defaultExpandAllRows', 'expandedRowRender', 'expandRowByClick', 'expandIcon', 'onExpand', 'onExpandedRowsChange', 'expandedRowClassName', 'expandIconColumnIndex', 'showExpandColumn'].some(function (prop) {\n      return prop in props;\n    })) {\n      warning(false, 'expanded related props have been moved into `expandable`.');\n    }\n\n    config = legacyExpandableConfig;\n  }\n\n  if (config.showExpandColumn === false) {\n    config.expandIconColumnIndex = -1;\n  }\n\n  return config;\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,YAAD,CAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,IAAIC,mBAAmB,GAAG,8BAA1B;AACP,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EACxC,IAAIC,UAAU,GAAGD,KAAK,CAACC,UAAvB;EAAA,IACIC,sBAAsB,GAAGP,wBAAwB,CAACK,KAAD,EAAQJ,SAAR,CADrD;;EAGA,IAAIO,MAAJ;;EAEA,IAAI,gBAAgBH,KAApB,EAA2B;IACzBG,MAAM,GAAGT,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKQ,sBAAL,CAAd,EAA4CD,UAA5C,CAAtB;EACD,CAFD,MAEO;IACL,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAAC,YAAD,EAAe,iBAAf,EAAkC,wBAAlC,EAA4D,sBAA5D,EAAoF,mBAApF,EAAyG,kBAAzG,EAA6H,YAA7H,EAA2I,UAA3I,EAAuJ,sBAAvJ,EAA+K,sBAA/K,EAAuM,uBAAvM,EAAgO,kBAAhO,EAAoPC,IAApP,CAAyP,UAAUC,IAAV,EAAgB;MACpT,OAAOA,IAAI,IAAIR,KAAf;IACD,CAF4C,CAA7C,EAEI;MACFH,OAAO,CAAC,KAAD,EAAQ,2DAAR,CAAP;IACD;;IAEDM,MAAM,GAAGD,sBAAT;EACD;;EAED,IAAIC,MAAM,CAACM,gBAAP,KAA4B,KAAhC,EAAuC;IACrCN,MAAM,CAACO,qBAAP,GAA+B,CAAC,CAAhC;EACD;;EAED,OAAOP,MAAP;AACD"},"metadata":{},"sourceType":"module"}