{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\n/**\n * Same as React.useState but `setState` accept `ignoreDestroy` param to not to setState after destroyed.\n * We do not make this auto is to avoid real memory leak.\n * Developer should confirm it's safe to ignore themselves.\n */\n\nexport default function useSafeState(defaultValue) {\n  var destroyRef = React.useRef(false);\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  React.useEffect(function () {\n    destroyRef.current = false;\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n\n  function safeSetState(updater, ignoreDestroy) {\n    if (ignoreDestroy && destroyRef.current) {\n      return;\n    }\n\n    setValue(updater);\n  }\n\n  return [value, safeSetState];\n}","map":{"version":3,"names":["_slicedToArray","React","useSafeState","defaultValue","destroyRef","useRef","_React$useState","useState","_React$useState2","value","setValue","useEffect","current","safeSetState","updater","ignoreDestroy"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-util/es/hooks/useState.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\n/**\n * Same as React.useState but `setState` accept `ignoreDestroy` param to not to setState after destroyed.\n * We do not make this auto is to avoid real memory leak.\n * Developer should confirm it's safe to ignore themselves.\n */\n\nexport default function useSafeState(defaultValue) {\n  var destroyRef = React.useRef(false);\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  React.useEffect(function () {\n    destroyRef.current = false;\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n\n  function safeSetState(updater, ignoreDestroy) {\n    if (ignoreDestroy && destroyRef.current) {\n      return;\n    }\n\n    setValue(updater);\n  }\n\n  return [value, safeSetState];\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;EACjD,IAAIC,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAa,KAAb,CAAjB;;EAEA,IAAIC,eAAe,GAAGL,KAAK,CAACM,QAAN,CAAeJ,YAAf,CAAtB;EAAA,IACIK,gBAAgB,GAAGR,cAAc,CAACM,eAAD,EAAkB,CAAlB,CADrC;EAAA,IAEIG,KAAK,GAAGD,gBAAgB,CAAC,CAAD,CAF5B;EAAA,IAGIE,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAH/B;;EAKAP,KAAK,CAACU,SAAN,CAAgB,YAAY;IAC1BP,UAAU,CAACQ,OAAX,GAAqB,KAArB;IACA,OAAO,YAAY;MACjBR,UAAU,CAACQ,OAAX,GAAqB,IAArB;IACD,CAFD;EAGD,CALD,EAKG,EALH;;EAOA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,aAA/B,EAA8C;IAC5C,IAAIA,aAAa,IAAIX,UAAU,CAACQ,OAAhC,EAAyC;MACvC;IACD;;IAEDF,QAAQ,CAACI,OAAD,CAAR;EACD;;EAED,OAAO,CAACL,KAAD,EAAQI,YAAR,CAAP;AACD"},"metadata":{},"sourceType":"module"}