{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nimport { getColumnsKey } from '../utils/valueUtil';\n\nfunction HeaderRow(_ref) {\n  var cells = _ref.cells,\n      stickyOffsets = _ref.stickyOffsets,\n      flattenColumns = _ref.flattenColumns,\n      RowComponent = _ref.rowComponent,\n      CellComponent = _ref.cellComponent,\n      onHeaderRow = _ref.onHeaderRow,\n      index = _ref.index;\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      direction = _React$useContext.direction;\n\n  var rowProps;\n\n  if (onHeaderRow) {\n    rowProps = onHeaderRow(cells.map(function (cell) {\n      return cell.column;\n    }), index);\n  }\n\n  var columnsKey = getColumnsKey(cells.map(function (cell) {\n    return cell.column;\n  }));\n  return /*#__PURE__*/React.createElement(RowComponent, rowProps, cells.map(function (cell, cellIndex) {\n    var column = cell.column;\n    var fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction);\n    var additionalProps;\n\n    if (column && column.onHeaderCell) {\n      additionalProps = cell.column.onHeaderCell(column);\n    }\n\n    return /*#__PURE__*/React.createElement(Cell, _extends({}, cell, {\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: CellComponent,\n      prefixCls: prefixCls,\n      key: columnsKey[cellIndex]\n    }, fixedInfo, {\n      additionalProps: additionalProps,\n      rowType: \"header\"\n    }));\n  }));\n}\n\nHeaderRow.displayName = 'HeaderRow';\nexport default HeaderRow;","map":{"version":3,"names":["_extends","React","Cell","TableContext","getCellFixedInfo","getColumnsKey","HeaderRow","_ref","cells","stickyOffsets","flattenColumns","RowComponent","rowComponent","CellComponent","cellComponent","onHeaderRow","index","_React$useContext","useContext","prefixCls","direction","rowProps","map","cell","column","columnsKey","createElement","cellIndex","fixedInfo","colStart","colEnd","additionalProps","onHeaderCell","ellipsis","align","component","key","rowType","displayName"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/Header/HeaderRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nimport { getColumnsKey } from '../utils/valueUtil';\n\nfunction HeaderRow(_ref) {\n  var cells = _ref.cells,\n      stickyOffsets = _ref.stickyOffsets,\n      flattenColumns = _ref.flattenColumns,\n      RowComponent = _ref.rowComponent,\n      CellComponent = _ref.cellComponent,\n      onHeaderRow = _ref.onHeaderRow,\n      index = _ref.index;\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      direction = _React$useContext.direction;\n\n  var rowProps;\n\n  if (onHeaderRow) {\n    rowProps = onHeaderRow(cells.map(function (cell) {\n      return cell.column;\n    }), index);\n  }\n\n  var columnsKey = getColumnsKey(cells.map(function (cell) {\n    return cell.column;\n  }));\n  return /*#__PURE__*/React.createElement(RowComponent, rowProps, cells.map(function (cell, cellIndex) {\n    var column = cell.column;\n    var fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction);\n    var additionalProps;\n\n    if (column && column.onHeaderCell) {\n      additionalProps = cell.column.onHeaderCell(column);\n    }\n\n    return /*#__PURE__*/React.createElement(Cell, _extends({}, cell, {\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: CellComponent,\n      prefixCls: prefixCls,\n      key: columnsKey[cellIndex]\n    }, fixedInfo, {\n      additionalProps: additionalProps,\n      rowType: \"header\"\n    }));\n  }));\n}\n\nHeaderRow.displayName = 'HeaderRow';\nexport default HeaderRow;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;EAAA,IACIC,aAAa,GAAGF,IAAI,CAACE,aADzB;EAAA,IAEIC,cAAc,GAAGH,IAAI,CAACG,cAF1B;EAAA,IAGIC,YAAY,GAAGJ,IAAI,CAACK,YAHxB;EAAA,IAIIC,aAAa,GAAGN,IAAI,CAACO,aAJzB;EAAA,IAKIC,WAAW,GAAGR,IAAI,CAACQ,WALvB;EAAA,IAMIC,KAAK,GAAGT,IAAI,CAACS,KANjB;;EAQA,IAAIC,iBAAiB,GAAGhB,KAAK,CAACiB,UAAN,CAAiBf,YAAjB,CAAxB;EAAA,IACIgB,SAAS,GAAGF,iBAAiB,CAACE,SADlC;EAAA,IAEIC,SAAS,GAAGH,iBAAiB,CAACG,SAFlC;;EAIA,IAAIC,QAAJ;;EAEA,IAAIN,WAAJ,EAAiB;IACfM,QAAQ,GAAGN,WAAW,CAACP,KAAK,CAACc,GAAN,CAAU,UAAUC,IAAV,EAAgB;MAC/C,OAAOA,IAAI,CAACC,MAAZ;IACD,CAFsB,CAAD,EAElBR,KAFkB,CAAtB;EAGD;;EAED,IAAIS,UAAU,GAAGpB,aAAa,CAACG,KAAK,CAACc,GAAN,CAAU,UAAUC,IAAV,EAAgB;IACvD,OAAOA,IAAI,CAACC,MAAZ;EACD,CAF8B,CAAD,CAA9B;EAGA,OAAO,aAAavB,KAAK,CAACyB,aAAN,CAAoBf,YAApB,EAAkCU,QAAlC,EAA4Cb,KAAK,CAACc,GAAN,CAAU,UAAUC,IAAV,EAAgBI,SAAhB,EAA2B;IACnG,IAAIH,MAAM,GAAGD,IAAI,CAACC,MAAlB;IACA,IAAII,SAAS,GAAGxB,gBAAgB,CAACmB,IAAI,CAACM,QAAN,EAAgBN,IAAI,CAACO,MAArB,EAA6BpB,cAA7B,EAA6CD,aAA7C,EAA4DW,SAA5D,CAAhC;IACA,IAAIW,eAAJ;;IAEA,IAAIP,MAAM,IAAIA,MAAM,CAACQ,YAArB,EAAmC;MACjCD,eAAe,GAAGR,IAAI,CAACC,MAAL,CAAYQ,YAAZ,CAAyBR,MAAzB,CAAlB;IACD;;IAED,OAAO,aAAavB,KAAK,CAACyB,aAAN,CAAoBxB,IAApB,EAA0BF,QAAQ,CAAC,EAAD,EAAKuB,IAAL,EAAW;MAC/DU,QAAQ,EAAET,MAAM,CAACS,QAD8C;MAE/DC,KAAK,EAAEV,MAAM,CAACU,KAFiD;MAG/DC,SAAS,EAAEtB,aAHoD;MAI/DM,SAAS,EAAEA,SAJoD;MAK/DiB,GAAG,EAAEX,UAAU,CAACE,SAAD;IALgD,CAAX,EAMnDC,SANmD,EAMxC;MACZG,eAAe,EAAEA,eADL;MAEZM,OAAO,EAAE;IAFG,CANwC,CAAlC,CAApB;EAUD,CAnB+D,CAA5C,CAApB;AAoBD;;AAED/B,SAAS,CAACgC,WAAV,GAAwB,WAAxB;AACA,eAAehC,SAAf"},"metadata":{},"sourceType":"module"}