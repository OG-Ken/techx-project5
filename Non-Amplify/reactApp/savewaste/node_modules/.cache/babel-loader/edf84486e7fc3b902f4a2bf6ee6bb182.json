{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"listHeight\", \"listItemHeight\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from './BaseSelect';\nimport useCache from './hooks/useCache';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useId from './hooks/useId';\nimport useOptions from './hooks/useOptions';\nimport useRefFunc from './hooks/useRefFunc';\nimport OptGroup from './OptGroup';\nimport Option from './Option';\nimport OptionList from './OptionList';\nimport SelectContext from './SelectContext';\nimport { hasValue, toArray } from './utils/commonUtil';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps, { warningNullOptions } from './utils/warningPropsUtil';\nvar OMIT_DOM_PROPS = ['inputValue'];\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      mode = props.mode,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n      backfill = props.backfill,\n      fieldNames = props.fieldNames,\n      inputValue = props.inputValue,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n      filterOption = props.filterOption,\n      filterSort = props.filterSort,\n      optionFilterProp = props.optionFilterProp,\n      optionLabelProp = props.optionLabelProp,\n      options = props.options,\n      children = props.children,\n      defaultActiveFirstOption = props.defaultActiveFirstOption,\n      menuItemSelectedIcon = props.menuItemSelectedIcon,\n      virtual = props.virtual,\n      _props$listHeight = props.listHeight,\n      listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n      _props$listItemHeight = props.listItemHeight,\n      listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      labelInValue = props.labelInValue,\n      onChange = props.onChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n\n    return filterOption;\n  }, [filterOption, mode]); // ========================= FieldNames =========================\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [// We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]); // =========================== Search ===========================\n\n  var _useMergedState = useMergedState('', {\n    value: searchValue !== undefined ? searchValue : inputValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues); // Convert to labelInValue type\n\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle; // Fill label & value\n\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n\n      var option = valueOptions.get(rawValue);\n\n      if (option) {\n        var _option$key; // Fill missing props\n\n\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title; // Warning if label not same as provided\n\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n\n          if (optionLabel !== undefined && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]); // =========================== Values ===========================\n\n  var _useMergedState3 = useMergedState(defaultValue, {\n    value: value\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n\n    var values = convert2LabelValues(internalValue); // combobox no need save value when it's no value\n\n    if (mode === 'combobox' && !((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n\n    return values;\n  }, [internalValue, convert2LabelValues, mode]); // Fill label with cache to avoid option remove\n\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n\n    return mergedValues.map(function (item) {\n      var _item$label;\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n  }, [mode, mergedValues]);\n  /** Convert `displayValues` to raw value type set */\n\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]); // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n\n  var createTagOption = useRefFunc(function (val, label) {\n    var _ref;\n\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _ref = {}, _defineProperty(_ref, mergedFieldNames.value, val), _defineProperty(_ref, mergedFieldNames.label, mergedLabel), _ref;\n  }); // Fill tag as option if mode is `tags`\n\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    } // >>> Tag mode\n\n\n    var cloneOptions = _toConsumableArray(mergedOptions); // Check if value exist in options (include new patch item)\n\n\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    }; // Fill current value as option\n\n\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp); // Fill options with search value if needed\n\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // Fill search value as option\n\n\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]); // =========================== Change ===========================\n\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n\n    if (onChange && ( // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange( // Value\n      multiple ? returnValues : returnValues[0], // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  }; // ======================= Accessibility ========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValue = _React$useState2[0],\n      setActiveValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      accessibilityIndex = _React$useState4[0],\n      setAccessibilityIndex = _React$useState4[1];\n\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$source = _ref2.source,\n        source = _ref2$source === void 0 ? 'keyboard' : _ref2$source;\n\n    setAccessibilityIndex(index);\n\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]); // ========================= OptionList =========================\n\n  var triggerSelect = function triggerSelect(val, selected) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n\n      onSelect(wrappedValue, option);\n    } else if (!selected && onDeselect) {\n      var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n\n      onDeselect(_wrappedValue, _option);\n    }\n  }; // Used for OptionList selection\n\n\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues; // Single mode always trigger select only with option list\n\n    var mergedSelect = multiple ? info.selected : true;\n\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  }); // ======================= Display Change =======================\n  // BaseSelect display values change\n\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n\n    if (info.type === 'remove' || info.type === 'clear') {\n      info.values.forEach(function (item) {\n        triggerSelect(item.value, false);\n      });\n    }\n  }; // =========================== Search ===========================\n\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null); // [Submit] Tag mode should flush input\n\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n\n      return;\n    }\n\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchText);\n    }\n  };\n\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  }; // ========================== Context ===========================\n\n\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData\n    });\n  }, [parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, childrenAsData]); // ========================== Warning ===========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  } // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\n\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;","map":{"version":3,"names":["_extends","_toConsumableArray","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_typeof","_excluded","useMergedState","warning","React","BaseSelect","isMultiple","useCache","useFilterOptions","useId","useOptions","useRefFunc","OptGroup","Option","OptionList","SelectContext","hasValue","toArray","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","warningNullOptions","OMIT_DOM_PROPS","isRawValue","value","Select","forwardRef","props","ref","id","mode","_props$prefixCls","prefixCls","backfill","fieldNames","inputValue","searchValue","onSearch","_props$autoClearSearc","autoClearSearchValue","onSelect","onDeselect","_props$dropdownMatchS","dropdownMatchSelectWidth","filterOption","filterSort","optionFilterProp","optionLabelProp","options","children","defaultActiveFirstOption","menuItemSelectedIcon","virtual","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","defaultValue","labelInValue","onChange","restProps","mergedId","multiple","childrenAsData","mergedFilterOption","useMemo","undefined","mergedFieldNames","JSON","stringify","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","useCallback","draftValues","valueList","map","val","rawValue","rawLabel","rawKey","rawDisabled","rawTitle","_val$value","key","label","option","get","_option$key","disabled","title","process","env","NODE_ENV","optionLabel","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","_values$","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","_item$label","rawValues","Set","useEffect","_mergedValues$","strValue","String","createTagOption","_ref","mergedLabel","filledTagOptions","cloneOptions","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","_mergedValues$index","returnValues","v","returnOptions","_React$useState","useState","_React$useState2","activeValue","setActiveValue","_React$useState3","_React$useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref2","arguments","_ref2$source","source","triggerSelect","selected","getSelectEnt","_option$key2","_getSelectEnt","_getSelectEnt2","wrappedValue","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","type","onInternalSearch","searchText","formatted","trim","newRawValues","Array","from","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","selectContext","realVirtual","createElement","Provider","omitDomProps","onSearchSplit","emptyOptions","activeDescendantId","displayName","TypedSelect"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-select/es/Select.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"listHeight\", \"listItemHeight\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\"];\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from './BaseSelect';\nimport useCache from './hooks/useCache';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useId from './hooks/useId';\nimport useOptions from './hooks/useOptions';\nimport useRefFunc from './hooks/useRefFunc';\nimport OptGroup from './OptGroup';\nimport Option from './Option';\nimport OptionList from './OptionList';\nimport SelectContext from './SelectContext';\nimport { hasValue, toArray } from './utils/commonUtil';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps, { warningNullOptions } from './utils/warningPropsUtil';\nvar OMIT_DOM_PROPS = ['inputValue'];\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      mode = props.mode,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n      backfill = props.backfill,\n      fieldNames = props.fieldNames,\n      inputValue = props.inputValue,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n      filterOption = props.filterOption,\n      filterSort = props.filterSort,\n      optionFilterProp = props.optionFilterProp,\n      optionLabelProp = props.optionLabelProp,\n      options = props.options,\n      children = props.children,\n      defaultActiveFirstOption = props.defaultActiveFirstOption,\n      menuItemSelectedIcon = props.menuItemSelectedIcon,\n      virtual = props.virtual,\n      _props$listHeight = props.listHeight,\n      listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n      _props$listItemHeight = props.listItemHeight,\n      listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      labelInValue = props.labelInValue,\n      onChange = props.onChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n\n    return filterOption;\n  }, [filterOption, mode]); // ========================= FieldNames =========================\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [// We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]); // =========================== Search ===========================\n\n  var _useMergedState = useMergedState('', {\n    value: searchValue !== undefined ? searchValue : inputValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues); // Convert to labelInValue type\n\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle; // Fill label & value\n\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n\n      var option = valueOptions.get(rawValue);\n\n      if (option) {\n        var _option$key;\n\n        // Fill missing props\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title; // Warning if label not same as provided\n\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n\n          if (optionLabel !== undefined && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]); // =========================== Values ===========================\n\n  var _useMergedState3 = useMergedState(defaultValue, {\n    value: value\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n\n    var values = convert2LabelValues(internalValue); // combobox no need save value when it's no value\n\n    if (mode === 'combobox' && !((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n\n    return values;\n  }, [internalValue, convert2LabelValues, mode]); // Fill label with cache to avoid option remove\n\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n\n    return mergedValues.map(function (item) {\n      var _item$label;\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n  }, [mode, mergedValues]);\n  /** Convert `displayValues` to raw value type set */\n\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]); // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n\n  var createTagOption = useRefFunc(function (val, label) {\n    var _ref;\n\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _ref = {}, _defineProperty(_ref, mergedFieldNames.value, val), _defineProperty(_ref, mergedFieldNames.label, mergedLabel), _ref;\n  }); // Fill tag as option if mode is `tags`\n\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    } // >>> Tag mode\n\n\n    var cloneOptions = _toConsumableArray(mergedOptions); // Check if value exist in options (include new patch item)\n\n\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    }; // Fill current value as option\n\n\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp); // Fill options with search value if needed\n\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // Fill search value as option\n\n\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]); // =========================== Change ===========================\n\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n\n    if (onChange && ( // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange( // Value\n      multiple ? returnValues : returnValues[0], // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  }; // ======================= Accessibility ========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValue = _React$useState2[0],\n      setActiveValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      accessibilityIndex = _React$useState4[0],\n      setAccessibilityIndex = _React$useState4[1];\n\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$source = _ref2.source,\n        source = _ref2$source === void 0 ? 'keyboard' : _ref2$source;\n\n    setAccessibilityIndex(index);\n\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]); // ========================= OptionList =========================\n\n  var triggerSelect = function triggerSelect(val, selected) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n\n      onSelect(wrappedValue, option);\n    } else if (!selected && onDeselect) {\n      var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n\n      onDeselect(_wrappedValue, _option);\n    }\n  }; // Used for OptionList selection\n\n\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues; // Single mode always trigger select only with option list\n\n    var mergedSelect = multiple ? info.selected : true;\n\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  }); // ======================= Display Change =======================\n  // BaseSelect display values change\n\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n\n    if (info.type === 'remove' || info.type === 'clear') {\n      info.values.forEach(function (item) {\n        triggerSelect(item.value, false);\n      });\n    }\n  }; // =========================== Search ===========================\n\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null); // [Submit] Tag mode should flush input\n\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n\n      return;\n    }\n\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchText);\n    }\n  };\n\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  }; // ========================== Context ===========================\n\n\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData\n    });\n  }, [parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, childrenAsData]); // ========================== Warning ===========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  } // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\n\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}