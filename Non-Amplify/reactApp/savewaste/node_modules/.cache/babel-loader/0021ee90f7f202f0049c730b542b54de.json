{"ast":null,"code":"import warning from \"rc-util/es/warning\";\nexport default (function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim(); // This is something like */*,*  allow all files\n\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      } // like .jpg, .png\n\n\n      if (validType.charAt(0) === '.') {\n        var lowerFileName = fileName.toLowerCase();\n        var lowerType = validType.toLowerCase();\n        var affixList = [lowerType];\n\n        if (lowerType === '.jpg' || lowerType === '.jpeg') {\n          affixList = ['.jpg', '.jpeg'];\n        }\n\n        return affixList.some(function (affix) {\n          return lowerFileName.endsWith(affix);\n        });\n      } // This is something like a image/* mime type\n\n\n      if (/\\/\\*$/.test(validType)) {\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      } // Full match\n\n\n      if (mimeType === validType) {\n        return true;\n      } // Invalidate type should skip\n\n\n      if (/^\\w+$/.test(validType)) {\n        warning(false, \"Upload takes an invalidate 'accept' type '\".concat(validType, \"'.Skip for check.\"));\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  return true;\n});","map":{"version":3,"names":["warning","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","test","charAt","lowerFileName","toLowerCase","lowerType","affixList","affix","endsWith","concat"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-upload/es/attr-accept.js"],"sourcesContent":["import warning from \"rc-util/es/warning\";\nexport default (function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim(); // This is something like */*,*  allow all files\n\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      } // like .jpg, .png\n\n\n      if (validType.charAt(0) === '.') {\n        var lowerFileName = fileName.toLowerCase();\n        var lowerType = validType.toLowerCase();\n        var affixList = [lowerType];\n\n        if (lowerType === '.jpg' || lowerType === '.jpeg') {\n          affixList = ['.jpg', '.jpeg'];\n        }\n\n        return affixList.some(function (affix) {\n          return lowerFileName.endsWith(affix);\n        });\n      } // This is something like a image/* mime type\n\n\n      if (/\\/\\*$/.test(validType)) {\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      } // Full match\n\n\n      if (mimeType === validType) {\n        return true;\n      } // Invalidate type should skip\n\n\n      if (/^\\w+$/.test(validType)) {\n        warning(false, \"Upload takes an invalidate 'accept' type '\".concat(validType, \"'.Skip for check.\"));\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  return true;\n});"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,gBAAgB,UAAUC,IAAV,EAAgBC,aAAhB,EAA+B;EAC7C,IAAID,IAAI,IAAIC,aAAZ,EAA2B;IACzB,IAAIC,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,aAAd,IAA+BA,aAA/B,GAA+CA,aAAa,CAACI,KAAd,CAAoB,GAApB,CAAxE;IACA,IAAIC,QAAQ,GAAGN,IAAI,CAACO,IAAL,IAAa,EAA5B;IACA,IAAIC,QAAQ,GAAGR,IAAI,CAACS,IAAL,IAAa,EAA5B;IACA,IAAIC,YAAY,GAAGF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAnB;IACA,OAAOT,kBAAkB,CAACU,IAAnB,CAAwB,UAAUH,IAAV,EAAgB;MAC7C,IAAII,SAAS,GAAGJ,IAAI,CAACK,IAAL,EAAhB,CAD6C,CAChB;;MAE7B,IAAI,cAAcC,IAAd,CAAmBN,IAAnB,CAAJ,EAA8B;QAC5B,OAAO,IAAP;MACD,CAL4C,CAK3C;;;MAGF,IAAII,SAAS,CAACG,MAAV,CAAiB,CAAjB,MAAwB,GAA5B,EAAiC;QAC/B,IAAIC,aAAa,GAAGX,QAAQ,CAACY,WAAT,EAApB;QACA,IAAIC,SAAS,GAAGN,SAAS,CAACK,WAAV,EAAhB;QACA,IAAIE,SAAS,GAAG,CAACD,SAAD,CAAhB;;QAEA,IAAIA,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,OAA1C,EAAmD;UACjDC,SAAS,GAAG,CAAC,MAAD,EAAS,OAAT,CAAZ;QACD;;QAED,OAAOA,SAAS,CAACR,IAAV,CAAe,UAAUS,KAAV,EAAiB;UACrC,OAAOJ,aAAa,CAACK,QAAd,CAAuBD,KAAvB,CAAP;QACD,CAFM,CAAP;MAGD,CApB4C,CAoB3C;;;MAGF,IAAI,QAAQN,IAAR,CAAaF,SAAb,CAAJ,EAA6B;QAC3B,OAAOH,YAAY,KAAKG,SAAS,CAACF,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAxB;MACD,CAzB4C,CAyB3C;;;MAGF,IAAIH,QAAQ,KAAKK,SAAjB,EAA4B;QAC1B,OAAO,IAAP;MACD,CA9B4C,CA8B3C;;;MAGF,IAAI,QAAQE,IAAR,CAAaF,SAAb,CAAJ,EAA6B;QAC3Bd,OAAO,CAAC,KAAD,EAAQ,6CAA6CwB,MAA7C,CAAoDV,SAApD,EAA+D,mBAA/D,CAAR,CAAP;QACA,OAAO,IAAP;MACD;;MAED,OAAO,KAAP;IACD,CAvCM,CAAP;EAwCD;;EAED,OAAO,IAAP;AACD,CAjDD"},"metadata":{},"sourceType":"module"}