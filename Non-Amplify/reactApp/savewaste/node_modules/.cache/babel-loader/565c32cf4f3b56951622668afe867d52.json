{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\n/**\n * Execute code before next frame but async\n */\n\nexport function useLayoutState(defaultState) {\n  var stateRef = useRef(defaultState);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var lastPromiseRef = useRef(null);\n  var updateBatchRef = useRef([]);\n\n  function setFrameState(updater) {\n    updateBatchRef.current.push(updater);\n    var promise = Promise.resolve();\n    lastPromiseRef.current = promise;\n    promise.then(function () {\n      if (lastPromiseRef.current === promise) {\n        var prevBatch = updateBatchRef.current;\n        var prevState = stateRef.current;\n        updateBatchRef.current = [];\n        prevBatch.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        lastPromiseRef.current = null;\n\n        if (prevState !== stateRef.current) {\n          forceUpdate({});\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    return function () {\n      lastPromiseRef.current = null;\n    };\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\nexport function useTimeoutLock(defaultState) {\n  var frameRef = useRef(defaultState || null);\n  var timeoutRef = useRef();\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = undefined;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}","map":{"version":3,"names":["_slicedToArray","useRef","useState","useEffect","useLayoutState","defaultState","stateRef","_useState","_useState2","forceUpdate","lastPromiseRef","updateBatchRef","setFrameState","updater","current","push","promise","Promise","resolve","then","prevBatch","prevState","forEach","batchUpdater","useTimeoutLock","frameRef","timeoutRef","cleanUp","window","clearTimeout","setState","newState","setTimeout","undefined","getState"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/hooks/useFrame.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\n/**\n * Execute code before next frame but async\n */\n\nexport function useLayoutState(defaultState) {\n  var stateRef = useRef(defaultState);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var lastPromiseRef = useRef(null);\n  var updateBatchRef = useRef([]);\n\n  function setFrameState(updater) {\n    updateBatchRef.current.push(updater);\n    var promise = Promise.resolve();\n    lastPromiseRef.current = promise;\n    promise.then(function () {\n      if (lastPromiseRef.current === promise) {\n        var prevBatch = updateBatchRef.current;\n        var prevState = stateRef.current;\n        updateBatchRef.current = [];\n        prevBatch.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        lastPromiseRef.current = null;\n\n        if (prevState !== stateRef.current) {\n          forceUpdate({});\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    return function () {\n      lastPromiseRef.current = null;\n    };\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\nexport function useTimeoutLock(defaultState) {\n  var frameRef = useRef(defaultState || null);\n  var timeoutRef = useRef();\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = undefined;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;EAC3C,IAAIC,QAAQ,GAAGL,MAAM,CAACI,YAAD,CAArB;;EAEA,IAAIE,SAAS,GAAGL,QAAQ,CAAC,EAAD,CAAxB;EAAA,IACIM,UAAU,GAAGR,cAAc,CAACO,SAAD,EAAY,CAAZ,CAD/B;EAAA,IAEIE,WAAW,GAAGD,UAAU,CAAC,CAAD,CAF5B;;EAIA,IAAIE,cAAc,GAAGT,MAAM,CAAC,IAAD,CAA3B;EACA,IAAIU,cAAc,GAAGV,MAAM,CAAC,EAAD,CAA3B;;EAEA,SAASW,aAAT,CAAuBC,OAAvB,EAAgC;IAC9BF,cAAc,CAACG,OAAf,CAAuBC,IAAvB,CAA4BF,OAA5B;IACA,IAAIG,OAAO,GAAGC,OAAO,CAACC,OAAR,EAAd;IACAR,cAAc,CAACI,OAAf,GAAyBE,OAAzB;IACAA,OAAO,CAACG,IAAR,CAAa,YAAY;MACvB,IAAIT,cAAc,CAACI,OAAf,KAA2BE,OAA/B,EAAwC;QACtC,IAAII,SAAS,GAAGT,cAAc,CAACG,OAA/B;QACA,IAAIO,SAAS,GAAGf,QAAQ,CAACQ,OAAzB;QACAH,cAAc,CAACG,OAAf,GAAyB,EAAzB;QACAM,SAAS,CAACE,OAAV,CAAkB,UAAUC,YAAV,EAAwB;UACxCjB,QAAQ,CAACQ,OAAT,GAAmBS,YAAY,CAACjB,QAAQ,CAACQ,OAAV,CAA/B;QACD,CAFD;QAGAJ,cAAc,CAACI,OAAf,GAAyB,IAAzB;;QAEA,IAAIO,SAAS,KAAKf,QAAQ,CAACQ,OAA3B,EAAoC;UAClCL,WAAW,CAAC,EAAD,CAAX;QACD;MACF;IACF,CAdD;EAeD;;EAEDN,SAAS,CAAC,YAAY;IACpB,OAAO,YAAY;MACjBO,cAAc,CAACI,OAAf,GAAyB,IAAzB;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAKA,OAAO,CAACR,QAAQ,CAACQ,OAAV,EAAmBF,aAAnB,CAAP;AACD;AACD;;AAEA,OAAO,SAASY,cAAT,CAAwBnB,YAAxB,EAAsC;EAC3C,IAAIoB,QAAQ,GAAGxB,MAAM,CAACI,YAAY,IAAI,IAAjB,CAArB;EACA,IAAIqB,UAAU,GAAGzB,MAAM,EAAvB;;EAEA,SAAS0B,OAAT,GAAmB;IACjBC,MAAM,CAACC,YAAP,CAAoBH,UAAU,CAACZ,OAA/B;EACD;;EAED,SAASgB,QAAT,CAAkBC,QAAlB,EAA4B;IAC1BN,QAAQ,CAACX,OAAT,GAAmBiB,QAAnB;IACAJ,OAAO;IACPD,UAAU,CAACZ,OAAX,GAAqBc,MAAM,CAACI,UAAP,CAAkB,YAAY;MACjDP,QAAQ,CAACX,OAAT,GAAmB,IAAnB;MACAY,UAAU,CAACZ,OAAX,GAAqBmB,SAArB;IACD,CAHoB,EAGlB,GAHkB,CAArB;EAID;;EAED,SAASC,QAAT,GAAoB;IAClB,OAAOT,QAAQ,CAACX,OAAhB;EACD;;EAEDX,SAAS,CAAC,YAAY;IACpB,OAAOwB,OAAP;EACD,CAFQ,EAEN,EAFM,CAAT;EAGA,OAAO,CAACG,QAAD,EAAWI,QAAX,CAAP;AACD"},"metadata":{},"sourceType":"module"}