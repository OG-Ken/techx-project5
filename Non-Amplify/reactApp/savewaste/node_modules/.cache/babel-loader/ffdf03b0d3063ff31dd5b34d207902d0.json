{"ast":null,"code":"import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport ExpandedRowContext from '../context/ExpandedRowContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize;\n\n  var _React$useContext2 = React.useContext(ExpandedRowContext),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      horizonScroll = _React$useContext2.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;","map":{"version":3,"names":["React","Cell","TableContext","ExpandedRowContext","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","className","expanded","colSpan","isEmpty","_React$useContext","useContext","scrollbarSize","_React$useContext2","fixHeader","fixColumn","componentWidth","horizonScroll","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/Body/ExpandedRow.js"],"sourcesContent":["import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport ExpandedRowContext from '../context/ExpandedRowContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize;\n\n  var _React$useContext2 = React.useContext(ExpandedRowContext),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      horizonScroll = _React$useContext2.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;EAAA,IACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;EAAA,IAEIC,SAAS,GAAGH,IAAI,CAACI,SAFrB;EAAA,IAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;EAAA,IAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;EAAA,IAKIC,QAAQ,GAAGP,IAAI,CAACO,QALpB;EAAA,IAMIC,OAAO,GAAGR,IAAI,CAACQ,OANnB;EAAA,IAOIC,OAAO,GAAGT,IAAI,CAACS,OAPnB;;EASA,IAAIC,iBAAiB,GAAGf,KAAK,CAACgB,UAAN,CAAiBd,YAAjB,CAAxB;EAAA,IACIe,aAAa,GAAGF,iBAAiB,CAACE,aADtC;;EAGA,IAAIC,kBAAkB,GAAGlB,KAAK,CAACgB,UAAN,CAAiBb,kBAAjB,CAAzB;EAAA,IACIgB,SAAS,GAAGD,kBAAkB,CAACC,SADnC;EAAA,IAEIC,SAAS,GAAGF,kBAAkB,CAACE,SAFnC;EAAA,IAGIC,cAAc,GAAGH,kBAAkB,CAACG,cAHxC;EAAA,IAIIC,aAAa,GAAGJ,kBAAkB,CAACI,aAJvC,CAbyB,CAiB6B;;;EAGtD,OAAOtB,KAAK,CAACuB,OAAN,CAAc,YAAY;IAC/B,IAAIC,WAAW,GAAGjB,QAAlB;;IAEA,IAAIO,OAAO,GAAGQ,aAAH,GAAmBF,SAA9B,EAAyC;MACvCI,WAAW,GAAG,aAAaxB,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;QACpDC,KAAK,EAAE;UACLC,KAAK,EAAEN,cAAc,IAAIF,SAAS,GAAGF,aAAH,GAAmB,CAAhC,CADhB;UAELW,QAAQ,EAAE,QAFL;UAGLC,IAAI,EAAE,CAHD;UAILC,QAAQ,EAAE;QAJL,CAD6C;QAOpDnB,SAAS,EAAE,GAAGoB,MAAH,CAAUzB,SAAV,EAAqB,qBAArB;MAPyC,CAA3B,EAQxBe,cAAc,KAAK,CAAnB,IAAwBG,WARA,CAA3B;IASD;;IAED,OAAO,aAAaxB,KAAK,CAACyB,aAAN,CAAoBjB,SAApB,EAA+B;MACjDG,SAAS,EAAEA,SADsC;MAEjDe,KAAK,EAAE;QACLM,OAAO,EAAEpB,QAAQ,GAAG,IAAH,GAAU;MADtB;IAF0C,CAA/B,EAKjB,aAAaZ,KAAK,CAACyB,aAAN,CAAoBxB,IAApB,EAA0B;MACxCQ,SAAS,EAAEC,aAD6B;MAExCJ,SAAS,EAAEA,SAF6B;MAGxCO,OAAO,EAAEA;IAH+B,CAA1B,EAIbW,WAJa,CALI,CAApB;EAUD,CAzBM,EAyBJ,CAACjB,QAAD,EAAWC,SAAX,EAAsBG,SAAtB,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6DG,aAA7D,EAA4EI,cAA5E,EAA4FD,SAA5F,EAAuGD,SAAvG,EAAkHG,aAAlH,CAzBI,CAAP;AA0BD;;AAED,eAAelB,WAAf"},"metadata":{},"sourceType":"module"}