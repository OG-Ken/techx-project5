{"ast":null,"code":"import { useMemo } from 'react';\n/**\n * Get sticky column offset width\n */\n\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = useMemo(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\n\nexport default useStickyOffsets;","map":{"version":3,"names":["useMemo","useStickyOffsets","colWidths","columnCount","direction","stickyOffsets","leftOffsets","rightOffsets","left","right","start","end","_end"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/rc-table/es/hooks/useStickyOffsets.js"],"sourcesContent":["import { useMemo } from 'react';\n/**\n * Get sticky column offset width\n */\n\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = useMemo(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\n\nexport default useStickyOffsets;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA;AACA;AACA;;AAEA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,SAAlD,EAA6D;EAC3D,IAAIC,aAAa,GAAGL,OAAO,CAAC,YAAY;IACtC,IAAIM,WAAW,GAAG,EAAlB;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,IAAI,GAAG,CAAX;IACA,IAAIC,KAAK,GAAG,CAAZ;;IAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,WAA5B,EAAyCO,KAAK,IAAI,CAAlD,EAAqD;MACnD,IAAIN,SAAS,KAAK,KAAlB,EAAyB;QACvB;QACAG,YAAY,CAACG,KAAD,CAAZ,GAAsBD,KAAtB;QACAA,KAAK,IAAIP,SAAS,CAACQ,KAAD,CAAT,IAAoB,CAA7B,CAHuB,CAGS;;QAEhC,IAAIC,GAAG,GAAGR,WAAW,GAAGO,KAAd,GAAsB,CAAhC;QACAJ,WAAW,CAACK,GAAD,CAAX,GAAmBH,IAAnB;QACAA,IAAI,IAAIN,SAAS,CAACS,GAAD,CAAT,IAAkB,CAA1B;MACD,CARD,MAQO;QACL;QACAL,WAAW,CAACI,KAAD,CAAX,GAAqBF,IAArB;QACAA,IAAI,IAAIN,SAAS,CAACQ,KAAD,CAAT,IAAoB,CAA5B,CAHK,CAG0B;;QAE/B,IAAIE,IAAI,GAAGT,WAAW,GAAGO,KAAd,GAAsB,CAAjC;;QAEAH,YAAY,CAACK,IAAD,CAAZ,GAAqBH,KAArB;QACAA,KAAK,IAAIP,SAAS,CAACU,IAAD,CAAT,IAAmB,CAA5B;MACD;IACF;;IAED,OAAO;MACLJ,IAAI,EAAEF,WADD;MAELG,KAAK,EAAEF;IAFF,CAAP;EAID,CA/B0B,EA+BxB,CAACL,SAAD,EAAYC,WAAZ,EAAyBC,SAAzB,CA/BwB,CAA3B;EAgCA,OAAOC,aAAP;AACD;;AAED,eAAeJ,gBAAf"},"metadata":{},"sourceType":"module"}