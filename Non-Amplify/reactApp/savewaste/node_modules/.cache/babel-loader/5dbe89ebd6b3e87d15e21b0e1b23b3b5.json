{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useForm as useRcForm } from 'rc-field-form';\nimport * as React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\n\nfunction toNamePathStr(name) {\n  var namePath = toArray(name);\n  return namePath.join('_');\n}\n\nexport default function useForm(form) {\n  var _useRcForm = useRcForm(),\n      _useRcForm2 = _slicedToArray(_useRcForm, 1),\n      rcForm = _useRcForm2[0];\n\n  var itemsRef = React.useRef({});\n  var wrapForm = React.useMemo(function () {\n    return form !== null && form !== void 0 ? form : _extends(_extends({}, rcForm), {\n      __INTERNAL__: {\n        itemRef: function itemRef(name) {\n          return function (node) {\n            var namePathStr = toNamePathStr(name);\n\n            if (node) {\n              itemsRef.current[namePathStr] = node;\n            } else {\n              delete itemsRef.current[namePathStr];\n            }\n          };\n        }\n      },\n      scrollToField: function scrollToField(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var namePath = toArray(name);\n        var fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n        var node = fieldId ? document.getElementById(fieldId) : null;\n\n        if (node) {\n          scrollIntoView(node, _extends({\n            scrollMode: 'if-needed',\n            block: 'nearest'\n          }, options));\n        }\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        var namePathStr = toNamePathStr(name);\n        return itemsRef.current[namePathStr];\n      }\n    });\n  }, [form, rcForm]);\n  return [wrapForm];\n}","map":{"version":3,"names":["_extends","_slicedToArray","useForm","useRcForm","React","scrollIntoView","getFieldId","toArray","toNamePathStr","name","namePath","join","form","_useRcForm","_useRcForm2","rcForm","itemsRef","useRef","wrapForm","useMemo","__INTERNAL__","itemRef","node","namePathStr","current","scrollToField","options","arguments","length","undefined","fieldId","document","getElementById","scrollMode","block","getFieldInstance"],"sources":["C:/Users/kmath/Documents/Booz/nachoProblem/techx-project5/reactApp/savewaste/node_modules/antd/es/form/hooks/useForm.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useForm as useRcForm } from 'rc-field-form';\nimport * as React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\n\nfunction toNamePathStr(name) {\n  var namePath = toArray(name);\n  return namePath.join('_');\n}\n\nexport default function useForm(form) {\n  var _useRcForm = useRcForm(),\n      _useRcForm2 = _slicedToArray(_useRcForm, 1),\n      rcForm = _useRcForm2[0];\n\n  var itemsRef = React.useRef({});\n  var wrapForm = React.useMemo(function () {\n    return form !== null && form !== void 0 ? form : _extends(_extends({}, rcForm), {\n      __INTERNAL__: {\n        itemRef: function itemRef(name) {\n          return function (node) {\n            var namePathStr = toNamePathStr(name);\n\n            if (node) {\n              itemsRef.current[namePathStr] = node;\n            } else {\n              delete itemsRef.current[namePathStr];\n            }\n          };\n        }\n      },\n      scrollToField: function scrollToField(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var namePath = toArray(name);\n        var fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n        var node = fieldId ? document.getElementById(fieldId) : null;\n\n        if (node) {\n          scrollIntoView(node, _extends({\n            scrollMode: 'if-needed',\n            block: 'nearest'\n          }, options));\n        }\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        var namePathStr = toNamePathStr(name);\n        return itemsRef.current[namePathStr];\n      }\n    });\n  }, [form, rcForm]);\n  return [wrapForm];\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,eAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,SAApC;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAIC,QAAQ,GAAGH,OAAO,CAACE,IAAD,CAAtB;EACA,OAAOC,QAAQ,CAACC,IAAT,CAAc,GAAd,CAAP;AACD;;AAED,eAAe,SAAST,OAAT,CAAiBU,IAAjB,EAAuB;EACpC,IAAIC,UAAU,GAAGV,SAAS,EAA1B;EAAA,IACIW,WAAW,GAAGb,cAAc,CAACY,UAAD,EAAa,CAAb,CADhC;EAAA,IAEIE,MAAM,GAAGD,WAAW,CAAC,CAAD,CAFxB;;EAIA,IAAIE,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAa,EAAb,CAAf;EACA,IAAIC,QAAQ,GAAGd,KAAK,CAACe,OAAN,CAAc,YAAY;IACvC,OAAOP,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0CZ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKe,MAAL,CAAT,EAAuB;MAC9EK,YAAY,EAAE;QACZC,OAAO,EAAE,SAASA,OAAT,CAAiBZ,IAAjB,EAAuB;UAC9B,OAAO,UAAUa,IAAV,EAAgB;YACrB,IAAIC,WAAW,GAAGf,aAAa,CAACC,IAAD,CAA/B;;YAEA,IAAIa,IAAJ,EAAU;cACRN,QAAQ,CAACQ,OAAT,CAAiBD,WAAjB,IAAgCD,IAAhC;YACD,CAFD,MAEO;cACL,OAAON,QAAQ,CAACQ,OAAT,CAAiBD,WAAjB,CAAP;YACD;UACF,CARD;QASD;MAXW,CADgE;MAc9EE,aAAa,EAAE,SAASA,aAAT,CAAuBhB,IAAvB,EAA6B;QAC1C,IAAIiB,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;QACA,IAAIjB,QAAQ,GAAGH,OAAO,CAACE,IAAD,CAAtB;QACA,IAAIqB,OAAO,GAAGxB,UAAU,CAACI,QAAD,EAAWQ,QAAQ,CAACE,YAAT,CAAsBX,IAAjC,CAAxB;QACA,IAAIa,IAAI,GAAGQ,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,CAAH,GAAsC,IAAxD;;QAEA,IAAIR,IAAJ,EAAU;UACRjB,cAAc,CAACiB,IAAD,EAAOtB,QAAQ,CAAC;YAC5BiC,UAAU,EAAE,WADgB;YAE5BC,KAAK,EAAE;UAFqB,CAAD,EAG1BR,OAH0B,CAAf,CAAd;QAID;MACF,CA1B6E;MA2B9ES,gBAAgB,EAAE,SAASA,gBAAT,CAA0B1B,IAA1B,EAAgC;QAChD,IAAIc,WAAW,GAAGf,aAAa,CAACC,IAAD,CAA/B;QACA,OAAOO,QAAQ,CAACQ,OAAT,CAAiBD,WAAjB,CAAP;MACD;IA9B6E,CAAvB,CAAzD;EAgCD,CAjCc,EAiCZ,CAACX,IAAD,EAAOG,MAAP,CAjCY,CAAf;EAkCA,OAAO,CAACG,QAAD,CAAP;AACD"},"metadata":{},"sourceType":"module"}